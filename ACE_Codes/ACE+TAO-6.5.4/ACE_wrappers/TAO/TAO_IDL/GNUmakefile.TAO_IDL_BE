# -*- Makefile -*-
#----------------------------------------------------------------------------
#       GNU Makefile
#
# @file GNUmakefile.TAO_IDL_BE
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
MAKEFILE         = GNUmakefile.TAO_IDL_BE
DEPENDENCY_FILE  = .depend.TAO_IDL_BE

LIB_PREFIX      ?= lib

## LIB_CHECKED may be set to empty later on in this file
LIB_UNCHECKED    = $(LIB_PREFIX)TAO_IDL_BE.$(LIBEXT)
LIB_CHECKED      = $(LIB_UNCHECKED)
LIB_NAME         = $(LIB_PREFIX)TAO_IDL_BE

## SHLIB may be set to empty later on in this file
SHLIB_UNCHECKED  = $(LIB_PREFIX)TAO_IDL_BE.$(SOEXT)
SHLIB            = $(SHLIB_UNCHECKED)

TAO_ROOT  ?= $(ACE_ROOT)/TAO

FILES = \
  be/be_argument.cpp \
  be/be_array.cpp \
  be/be_attribute.cpp \
  be/be_codegen.cpp \
  be/be_component.cpp \
  be/be_component_fwd.cpp \
  be/be_connector.cpp \
  be/be_constant.cpp \
  be/be_consumes.cpp \
  be/be_decl.cpp \
  be/be_emits.cpp \
  be/be_enum.cpp \
  be/be_enum_val.cpp \
  be/be_eventtype.cpp \
  be/be_eventtype_fwd.cpp \
  be/be_exception.cpp \
  be/be_expression.cpp \
  be/be_extended_port.cpp \
  be/be_factory.cpp \
  be/be_field.cpp \
  be/be_finder.cpp \
  be/be_fixed.cpp \
  be/be_generator.cpp \
  be/be_global.cpp \
  be/be_helper.cpp \
  be/be_home.cpp \
  be/be_identifier_helper.cpp \
  be/be_init.cpp \
  be/be_interface.cpp \
  be/be_interface_fwd.cpp \
  be/be_mirror_port.cpp \
  be/be_module.cpp \
  be/be_native.cpp \
  be/be_null_return_emitter.cpp \
  be/be_operation.cpp \
  be/be_param_holder.cpp \
  be/be_porttype.cpp \
  be/be_predefined_type.cpp \
  be/be_produce.cpp \
  be/be_provides.cpp \
  be/be_publishes.cpp \
  be/be_root.cpp \
  be/be_scope.cpp \
  be/be_sequence.cpp \
  be/be_string.cpp \
  be/be_structure.cpp \
  be/be_structure_fwd.cpp \
  be/be_template_module.cpp \
  be/be_template_module_inst.cpp \
  be/be_template_module_ref.cpp \
  be/be_tmplinst.cpp \
  be/be_type.cpp \
  be/be_typedef.cpp \
  be/be_union.cpp \
  be/be_union_branch.cpp \
  be/be_union_fwd.cpp \
  be/be_union_label.cpp \
  be/be_uses.cpp \
  be/be_util.cpp \
  be/be_valuebox.cpp \
  be/be_valuetype.cpp \
  be/be_valuetype_fwd.cpp \
  be/be_visitor.cpp \
  be/be_visitor_amh_pre_proc.cpp \
  be/be_visitor_ami_pre_proc.cpp \
  be/be_visitor_any_extracted_type_decl.cpp \
  be/be_visitor_arg_traits.cpp \
  be/be_visitor_argument/arglist.cpp \
  be/be_visitor_argument/argument.cpp \
  be/be_visitor_argument/invoke_cs.cpp \
  be/be_visitor_argument/marshal_ss.cpp \
  be/be_visitor_argument/upcall_ss.cpp \
  be/be_visitor_argument/vardecl_ss.cpp \
  be/be_visitor_array/any_op_ch.cpp \
  be/be_visitor_array/any_op_cs.cpp \
  be/be_visitor_array/array.cpp \
  be/be_visitor_array/array_ch.cpp \
  be/be_visitor_array/array_ci.cpp \
  be/be_visitor_array/array_cs.cpp \
  be/be_visitor_array/cdr_op_ch.cpp \
  be/be_visitor_array/cdr_op_cs.cpp \
  be/be_visitor_attr_assign.cpp \
  be/be_visitor_attr_init.cpp \
  be/be_visitor_attr_return.cpp \
  be/be_visitor_attr_setarg_type.cpp \
  be/be_visitor_attribute/attribute.cpp \
  be/be_visitor_attribute/ccm_init.cpp \
  be/be_visitor_attribute/set_from_extracted.cpp \
  be/be_visitor_ccm_pre_proc.cpp \
  be/be_visitor_component/component.cpp \
  be/be_visitor_component/component_ami_rh_ex_base.cpp \
  be/be_visitor_component/component_ami_rh_exh.cpp \
  be/be_visitor_component/component_ami_rh_exs.cpp \
  be/be_visitor_component/component_ex_idl.cpp \
  be/be_visitor_component/component_exh.cpp \
  be/be_visitor_component/component_exs.cpp \
  be/be_visitor_component/component_svh.cpp \
  be/be_visitor_component/component_svs.cpp \
  be/be_visitor_component/component_svth.cpp \
  be/be_visitor_component/component_svts.cpp \
  be/be_visitor_component/context_ex_idl.cpp \
  be/be_visitor_component/context_svth.cpp \
  be/be_visitor_component/context_svts.cpp \
  be/be_visitor_component/executor_ex_idl.cpp \
  be/be_visitor_component/executor_exh.cpp \
  be/be_visitor_component/executor_exs.cpp \
  be/be_visitor_component/executor_exs_attr_init.cpp \
  be/be_visitor_component/executor_private_exh.cpp \
  be/be_visitor_component/facet_exh.cpp \
  be/be_visitor_component/facet_exs.cpp \
  be/be_visitor_component/servant_svh.cpp \
  be/be_visitor_component/servant_svs.cpp \
  be/be_visitor_component_fwd/any_op_ch.cpp \
  be/be_visitor_component_fwd/cdr_op_ch.cpp \
  be/be_visitor_component_fwd/component_fwd_ch.cpp \
  be/be_visitor_component_scope.cpp \
  be/be_visitor_connector/connector_ami_exh.cpp \
  be/be_visitor_connector/connector_ami_exs.cpp \
  be/be_visitor_connector/connector_dds_ex_base.cpp \
  be/be_visitor_connector/connector_dds_exh.cpp \
  be/be_visitor_connector/connector_dds_exs.cpp \
  be/be_visitor_connector/executor_ami_exh.cpp \
  be/be_visitor_connector/executor_ami_exs.cpp \
  be/be_visitor_connector/facet_ami_exh.cpp \
  be/be_visitor_connector/facet_ami_exs.cpp \
  be/be_visitor_constant/constant_ch.cpp \
  be/be_visitor_constant/constant_cs.cpp \
  be/be_visitor_context.cpp \
  be/be_visitor_dds_ts_idl.cpp \
  be/be_visitor_decl.cpp \
  be/be_visitor_enum/any_op_ch.cpp \
  be/be_visitor_enum/any_op_cs.cpp \
  be/be_visitor_enum/cdr_op_ch.cpp \
  be/be_visitor_enum/cdr_op_cs.cpp \
  be/be_visitor_enum/enum_ch.cpp \
  be/be_visitor_enum/enum_cs.cpp \
  be/be_visitor_exception/any_op_ch.cpp \
  be/be_visitor_exception/any_op_cs.cpp \
  be/be_visitor_exception/cdr_op_ch.cpp \
  be/be_visitor_exception/cdr_op_cs.cpp \
  be/be_visitor_exception/ctor_assign.cpp \
  be/be_visitor_exception/exception.cpp \
  be/be_visitor_exception/exception_ch.cpp \
  be/be_visitor_exception/exception_ci.cpp \
  be/be_visitor_exception/exception_cs.cpp \
  be/be_visitor_exception/exception_ctor.cpp \
  be/be_visitor_field/cdr_op_ch.cpp \
  be/be_visitor_field/cdr_op_cs.cpp \
  be/be_visitor_field/field_ch.cpp \
  be/be_visitor_field/field_ci.cpp \
  be/be_visitor_field/field_cs.cpp \
  be/be_visitor_home/home_ex_idl.cpp \
  be/be_visitor_home/home_exh.cpp \
  be/be_visitor_home/home_exs.cpp \
  be/be_visitor_home/home_svh.cpp \
  be/be_visitor_home/home_svs.cpp \
  be/be_visitor_interface/amh_ch.cpp \
  be/be_visitor_interface/amh_rh_sh.cpp \
  be/be_visitor_interface/amh_rh_ss.cpp \
  be/be_visitor_interface/amh_sh.cpp \
  be/be_visitor_interface/amh_ss.cpp \
  be/be_visitor_interface/ami4ccm_conn_ex_idl.cpp \
  be/be_visitor_interface/ami4ccm_rh_ex_idl.cpp \
  be/be_visitor_interface/ami4ccm_sendc_ex_idl.cpp \
  be/be_visitor_interface/any_op_ch.cpp \
  be/be_visitor_interface/any_op_cs.cpp \
  be/be_visitor_interface/cdr_op_ch.cpp \
  be/be_visitor_interface/cdr_op_cs.cpp \
  be/be_visitor_interface/direct_proxy_impl_sh.cpp \
  be/be_visitor_interface/direct_proxy_impl_ss.cpp \
  be/be_visitor_interface/facet_svth.cpp \
  be/be_visitor_interface/facet_svts.cpp \
  be/be_visitor_interface/interface.cpp \
  be/be_visitor_interface/interface_ch.cpp \
  be/be_visitor_interface/interface_ci.cpp \
  be/be_visitor_interface/interface_cs.cpp \
  be/be_visitor_interface/interface_ex_idl.cpp \
  be/be_visitor_interface/interface_ih.cpp \
  be/be_visitor_interface/interface_is.cpp \
  be/be_visitor_interface/interface_sh.cpp \
  be/be_visitor_interface/interface_ss.cpp \
  be/be_visitor_interface/interface_svth.cpp \
  be/be_visitor_interface/interface_svts.cpp \
  be/be_visitor_interface/smart_proxy_ch.cpp \
  be/be_visitor_interface/smart_proxy_cs.cpp \
  be/be_visitor_interface/tie_sh.cpp \
  be/be_visitor_interface/tie_ss.cpp \
  be/be_visitor_interface_fwd/any_op_ch.cpp \
  be/be_visitor_interface_fwd/cdr_op_ch.cpp \
  be/be_visitor_interface_fwd/interface_fwd_ch.cpp \
  be/be_visitor_member_type_decl.cpp \
  be/be_visitor_module/any_op.cpp \
  be/be_visitor_module/cdr_op.cpp \
  be/be_visitor_module/module.cpp \
  be/be_visitor_module/module_ch.cpp \
  be/be_visitor_module/module_ih.cpp \
  be/be_visitor_module/module_sh.cpp \
  be/be_visitor_native/native_ch.cpp \
  be/be_visitor_null_return_value.cpp \
  be/be_visitor_operation/amh_rh_sh.cpp \
  be/be_visitor_operation/amh_rh_ss.cpp \
  be/be_visitor_operation/amh_sh.cpp \
  be/be_visitor_operation/amh_ss.cpp \
  be/be_visitor_operation/ami_cs.cpp \
  be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp \
  be/be_visitor_operation/arglist.cpp \
  be/be_visitor_operation/argument.cpp \
  be/be_visitor_operation/argument_invoke.cpp \
  be/be_visitor_operation/argument_marshal.cpp \
  be/be_visitor_operation/direct_proxy_impl_ss.cpp \
  be/be_visitor_operation/exceptlist_cs.cpp \
  be/be_visitor_operation/exceptlist_ss.cpp \
  be/be_visitor_operation/operation.cpp \
  be/be_visitor_operation/operation_ch.cpp \
  be/be_visitor_operation/operation_cs.cpp \
  be/be_visitor_operation/operation_exs.cpp \
  be/be_visitor_operation/operation_ih.cpp \
  be/be_visitor_operation/operation_is.cpp \
  be/be_visitor_operation/operation_sh.cpp \
  be/be_visitor_operation/operation_ss.cpp \
  be/be_visitor_operation/operation_svs.cpp \
  be/be_visitor_operation/proxy_impl_xh.cpp \
  be/be_visitor_operation/rettype.cpp \
  be/be_visitor_operation/rettype_return_cs.cpp \
  be/be_visitor_operation/smart_proxy_ch.cpp \
  be/be_visitor_operation/smart_proxy_cs.cpp \
  be/be_visitor_operation/tie_sh.cpp \
  be/be_visitor_operation/tie_ss.cpp \
  be/be_visitor_operation/upcall_command_ss.cpp \
  be/be_visitor_root/any_op.cpp \
  be/be_visitor_root/cdr_op.cpp \
  be/be_visitor_root/root.cpp \
  be/be_visitor_root/root_ch.cpp \
  be/be_visitor_root/root_ci.cpp \
  be/be_visitor_root/root_cnh.cpp \
  be/be_visitor_root/root_cns.cpp \
  be/be_visitor_root/root_cs.cpp \
  be/be_visitor_root/root_ex_idl.cpp \
  be/be_visitor_root/root_exh.cpp \
  be/be_visitor_root/root_exs.cpp \
  be/be_visitor_root/root_ih.cpp \
  be/be_visitor_root/root_is.cpp \
  be/be_visitor_root/root_sh.cpp \
  be/be_visitor_root/root_ss.cpp \
  be/be_visitor_root/root_sth.cpp \
  be/be_visitor_root/root_svh.cpp \
  be/be_visitor_root/root_svs.cpp \
  be/be_visitor_root/root_svth.cpp \
  be/be_visitor_root/root_svts.cpp \
  be/be_visitor_scope.cpp \
  be/be_visitor_sequence/any_op_ch.cpp \
  be/be_visitor_sequence/any_op_cs.cpp \
  be/be_visitor_sequence/buffer_type.cpp \
  be/be_visitor_sequence/cdr_op_ch.cpp \
  be/be_visitor_sequence/cdr_op_cs.cpp \
  be/be_visitor_sequence/sequence_base.cpp \
  be/be_visitor_sequence/sequence_ch.cpp \
  be/be_visitor_sequence/sequence_cs.cpp \
  be/be_visitor_structure/any_op_ch.cpp \
  be/be_visitor_structure/any_op_cs.cpp \
  be/be_visitor_structure/cdr_op_ch.cpp \
  be/be_visitor_structure/cdr_op_cs.cpp \
  be/be_visitor_structure/structure.cpp \
  be/be_visitor_structure/structure_ch.cpp \
  be/be_visitor_structure/structure_ci.cpp \
  be/be_visitor_structure/structure_cs.cpp \
  be/be_visitor_structure_fwd/structure_fwd_ch.cpp \
  be/be_visitor_template_export.cpp \
  be/be_visitor_traits.cpp \
  be/be_visitor_typecode/alias_typecode.cpp \
  be/be_visitor_typecode/enum_typecode.cpp \
  be/be_visitor_typecode/objref_typecode.cpp \
  be/be_visitor_typecode/struct_typecode.cpp \
  be/be_visitor_typecode/typecode_decl.cpp \
  be/be_visitor_typecode/typecode_defn.cpp \
  be/be_visitor_typecode/union_typecode.cpp \
  be/be_visitor_typecode/value_typecode.cpp \
  be/be_visitor_typedef/any_op_ch.cpp \
  be/be_visitor_typedef/any_op_cs.cpp \
  be/be_visitor_typedef/cdr_op_ch.cpp \
  be/be_visitor_typedef/cdr_op_cs.cpp \
  be/be_visitor_typedef/typedef.cpp \
  be/be_visitor_typedef/typedef_ch.cpp \
  be/be_visitor_typedef/typedef_ci.cpp \
  be/be_visitor_typedef/typedef_cs.cpp \
  be/be_visitor_union/any_op_ch.cpp \
  be/be_visitor_union/any_op_cs.cpp \
  be/be_visitor_union/cdr_op_ch.cpp \
  be/be_visitor_union/cdr_op_cs.cpp \
  be/be_visitor_union/discriminant_ch.cpp \
  be/be_visitor_union/discriminant_ci.cpp \
  be/be_visitor_union/discriminant_cs.cpp \
  be/be_visitor_union/union.cpp \
  be/be_visitor_union/union_ch.cpp \
  be/be_visitor_union/union_ci.cpp \
  be/be_visitor_union/union_cs.cpp \
  be/be_visitor_union_branch/cdr_op_ch.cpp \
  be/be_visitor_union_branch/cdr_op_cs.cpp \
  be/be_visitor_union_branch/private_ch.cpp \
  be/be_visitor_union_branch/public_assign_cs.cpp \
  be/be_visitor_union_branch/public_ch.cpp \
  be/be_visitor_union_branch/public_ci.cpp \
  be/be_visitor_union_branch/public_constructor_cs.cpp \
  be/be_visitor_union_branch/public_cs.cpp \
  be/be_visitor_union_branch/public_reset_cs.cpp \
  be/be_visitor_union_fwd/union_fwd_ch.cpp \
  be/be_visitor_valuebox/any_op_ch.cpp \
  be/be_visitor_valuebox/any_op_cs.cpp \
  be/be_visitor_valuebox/cdr_op_ch.cpp \
  be/be_visitor_valuebox/cdr_op_cs.cpp \
  be/be_visitor_valuebox/field_ch.cpp \
  be/be_visitor_valuebox/field_ci.cpp \
  be/be_visitor_valuebox/union_member_ci.cpp \
  be/be_visitor_valuebox/valuebox.cpp \
  be/be_visitor_valuebox/valuebox_ch.cpp \
  be/be_visitor_valuebox/valuebox_ci.cpp \
  be/be_visitor_valuebox/valuebox_cs.cpp \
  be/be_visitor_valuetype/any_op_ch.cpp \
  be/be_visitor_valuetype/any_op_cs.cpp \
  be/be_visitor_valuetype/arglist.cpp \
  be/be_visitor_valuetype/cdr_op_ch.cpp \
  be/be_visitor_valuetype/cdr_op_cs.cpp \
  be/be_visitor_valuetype/field_cdr_ch.cpp \
  be/be_visitor_valuetype/field_cdr_cs.cpp \
  be/be_visitor_valuetype/field_ch.cpp \
  be/be_visitor_valuetype/field_ci.cpp \
  be/be_visitor_valuetype/field_cs.cpp \
  be/be_visitor_valuetype/marshal_ch.cpp \
  be/be_visitor_valuetype/marshal_cs.cpp \
  be/be_visitor_valuetype/obv_module.cpp \
  be/be_visitor_valuetype/valuetype.cpp \
  be/be_visitor_valuetype/valuetype_ch.cpp \
  be/be_visitor_valuetype/valuetype_ci.cpp \
  be/be_visitor_valuetype/valuetype_cs.cpp \
  be/be_visitor_valuetype/valuetype_init.cpp \
  be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp \
  be/be_visitor_valuetype/valuetype_init_ch.cpp \
  be/be_visitor_valuetype/valuetype_init_ci.cpp \
  be/be_visitor_valuetype/valuetype_init_cs.cpp \
  be/be_visitor_valuetype/valuetype_obv_ch.cpp \
  be/be_visitor_valuetype/valuetype_obv_ci.cpp \
  be/be_visitor_valuetype/valuetype_obv_cs.cpp \
  be/be_visitor_valuetype/valuetype_sh.cpp \
  be/be_visitor_valuetype/valuetype_ss.cpp \
  be/be_visitor_valuetype_fwd/any_op_ch.cpp \
  be/be_visitor_valuetype_fwd/cdr_op_ch.cpp \
  be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp \
  be/be_visitor_xplicit_pre_proc.cpp

VPATH = .:be/be_visitor_component_fwd:be/be_visitor_valuetype:be/be_visitor_interface:be/be_visitor_structure_fwd:be/be_visitor_exception:be/be_visitor_sequence:be/be_visitor_root:be/be_visitor_connector:be/be_visitor_argument:be/be_visitor_constant:be/be_visitor_union:be/be_visitor_operation:be/be_visitor_home:be/be_visitor_interface_fwd:be/be_visitor_module:be/be_visitor_component:be/be_visitor_union_fwd:be/be_visitor_typedef:be/be_visitor_union_branch:be:be/be_visitor_attribute:be/be_visitor_field:be/be_visitor_enum:be/be_visitor_valuetype_fwd:be/be_visitor_valuebox:be/be_visitor_structure:be/be_visitor_array:be/be_visitor_typecode:be/be_visitor_native


LIBPATHS := . "../../lib"

#----------------------------------------------------------------------------
#       Include macros and targets
#----------------------------------------------------------------------------
ACE_SHLIBS = -lTAO_IDL_FE -lACE

PRJ_TYPE = library

COLLAPSE_SLASHES = $(if $(findstring //,$(1)),$(call COLLAPSE_SLASHES,$(subst //,/,$(1))),$(1))
INSLIB ?= $(call COLLAPSE_SLASHES,../../lib)
ifeq ($(INSLIB),.)
  ifeq ($(CURDIR),)
    ifeq ($(PWD),)
      PWD=$(shell pwd)
    endif
  else
    PWD=$(CURDIR)
  endif
  INSLIB = $(PWD)
endif
OUTPUT_DIRECTORY = $(INSLIB)

include $(ACE_ROOT)/include/makeinclude/wrapper_macros.GNU

include $(TAO_ROOT)/rules.tao.GNU

GNUACE_PROJECT_VERSION ?= $(ACE_VERSION)

# To build multiple targets in the same directory on AIX, it works
# best to have a template directory per project.
# The compiler/linker isn't too smart about instantiating templates...
ifdef TEMPINCDIR
TEMPINCDIR := $(TEMPINCDIR)/TAO_IDL_BE
all: $(TEMPINCDIR)
endif

ifneq ($(OUTPUT_DIRECTORY),)
.PHONY: create_output_directory.local
all: create_output_directory.local
create_output_directory.local:
	-@$(MKDIR) "$(OUTPUT_DIRECTORY)" $(ACE_NUL_STDERR)
endif

# turn off libcheck if doing a dry run
ifeq ($(findstring n, $(MAKEFLAGS)),n)
  LIBCHECK = 1
else
  # turn off libcheck if keep going was passed too
  ifeq ($(findstring k, $(MAKEFLAGS)),k)
    LIBCHECK = 1
  else
    ifeq ($(LIBCHECK_PREFIX),)
      # If the user hasn't specified a place to look for installed libraries, let's set
      # a reasonable default
      LIBCHECK_PREFIX = /usr
    endif
    LIBCHECK ?= $(filter-out $(foreach lib,TAO_IDL_FE ACE,$(findstring $(lib),$(foreach libpath,. $(if $(ARCH),./$(ARCH)) ../../lib $(if $(ARCH),../../lib/$(ARCH)) $(LIBCHECK_PREFIX)/lib $(LIBCHECK_PREFIX)/lib64 $(LIBCHECK_EXTRA_PATHS) $(INSLIB),$(wildcard $(libpath)/$(LIB_PREFIX)$(lib).* $(libpath)/$(lib).lib)))),TAO_IDL_FE ACE)
    ifeq ($(LIBCHECK),)
      LIBCHECK = 1
    endif
  endif
endif
ifeq ($(build_tao_idl_be),1)
ifneq ($(LIBCHECK), 1)
  LIB_CHECKED   =
  SHLIB =
  all: lib_warning
endif
else
  LIB_CHECKED   =
  SHLIB =
  all: require_warning
endif

ifeq ($(build_tao_idl_be),1)
else
  LIB_CHECKED   =
  SHLIB =
  all: require_warning
endif
LSRC   = $(FILES)

include $(ACE_ROOT)/include/makeinclude/macros.GNU
include $(ACE_ROOT)/include/makeinclude/rules.common.GNU
include $(ACE_ROOT)/include/makeinclude/rules.nonested.GNU
include $(ACE_ROOT)/include/makeinclude/rules.lib.GNU
include $(ACE_ROOT)/include/makeinclude/rules.local.GNU
ifeq ($(VXWORKSLINK),1)
include $(TGT_DIR)/h/make/rules.$(PRJ_TYPE)
endif

ifeq ($(VXWORKSLINK),1)
LDLIBPATH     = -L. -L../../lib
else
LDFLAGS      += -L. $(if $(ARCH),-L./$(ARCH)) -L../../lib $(if $(ARCH),-L../../lib/$(ARCH))
endif
CPPFLAGS     += -I../.. -I../TAO_IDL/fe -I../TAO_IDL/include -I.. -Iinclude -Ibe_include -Ife
ifeq ($(shared_libs),1)
  ifneq ($(SHLIB),)
    CPPFLAGS += -DTAO_IDL_BE_BUILD_DLL
  endif
endif
ifeq ($(static_libs),1)
  CPPFLAGS += -DACE_AS_STATIC_LIBS
endif

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------
lib_warning:
	@echo TAO_IDL_BE will not be built due to the following missing library: $(LIBCHECK) >&2

ifneq ($(build_tao_idl_be),1)
requires_disabled_macros += build_tao_idl_be
endif
require_warning:
	@echo TAO_IDL_BE will not be built due to the following disabled make macros: $(requires_disabled_macros)>&2

## Some OS's have /bin/test others only have /usr/bin/test
ifeq ($(wildcard /bin/test), /bin/test)
  TEST_EXE = /bin/test
else
ifeq ($(wildcard /usr/bin/test), /usr/bin/test)
  TEST_EXE = /usr/bin/test
endif
endif

SPACE = $(should_be_unset) $(should_be_unset)
ifneq ($(GENERATED_DIRTY),)
.PRECIOUS: $(GENERATED_DIRTY)
## If the generated files are anything but source files, we need to
## ensure that those files are generated before we attempt to build anything
## else.
ifeq ($(OBJS_DEPEND_ON_GENERATED),1)
$(VDIR)$(ACE_PCH_FILE) $(addprefix $(VDIR), $(OBJS)): $(GENERATED_DIRTY)
$(VSHDIR)$(ACE_PCH_FILE) $(VSHOBJS): $(GENERATED_DIRTY)
endif
endif



realclean: clean
ifneq ($(GENERATED_DIRTY),)
	-$(RM) -r $(GENERATED_DIRTY)
endif

__prebuild__:
ifeq ($(build_tao_idl_be),1)
	@-:
endif


.PHONY: install
install: all
INSTALL_LIB ?= lib
ifneq ($(INSTALL_PREFIX),)
ifneq ($(install_rpath),0)
LD_RPATH ?= -Wl,-rpath,
LDFLAGS += $(LD_RPATH)$(INSTALL_PREFIX)/$(INSTALL_LIB) $(LD_RPATH_FLAGS)
endif
endif

PRJINST_OPTIONS ?=
INST_DIR ?= /$(notdir $(PWD))
COMMA = ,
SPACE = $(should_be_unset) $(should_be_unset)
INSTALLER ?= $(MPC_ROOT)/prj_install.pl
CUSTOM_INST_TAGS = $(sort  )

ifeq ($(shared_libs),1)
INST_TAGS = lib_output$(if $(LIB_INST_TAGS), $(LIB_INST_TAGS))
INST_LOCATIONS = $(LIB_INST_LOCATIONS) -o lib_output=$(INSTALL_LIB)
endif

DATA_INST_TAGS = 
INST_LOCATIONS += $(if $(DATA_INST_TAGS),-x installdata_files -b installdata_files=share$(INST_DIR))
INST_TAGS := $(INST_TAGS)$(if $(DATA_INST_TAGS), $(DATA_INST_TAGS))

ifeq ($(INSTALLER),/prj_install.pl)
INSTALLER = $(ACE_ROOT)/MPC/prj_install.pl
endif

ifeq ($(LIBCHECK),1)
ifeq ($(build_tao_idl_be),1)
install:
ifeq ($(INST_TAGS),)
	@echo Nothing to install.
else
ifeq ($(INSTALL_PREFIX),)
	@echo The variable INSTALL_PREFIX must be set to install.
	@echo If binaries are already built and you want to use RPATH,
	@echo they must be rebuilt after changing INSTALL_PREFIX.
	@false
else
	perl -ne'if (/^#END MPC-Generated Install Info/) {exit 0}' \
	  -e'elsif (/^#BEGIN MPC-Generated Install Info/) {$$ok=1}' \
	  -e'elsif ($$ok && s/^#//) {print}' $(MAKEFILE) | \
	$(INSTALLER) -i -s $(subst $(SPACE),$(COMMA),$(INST_TAGS)) \
	  $(INST_LOCATIONS) $(if $(ARCH),-d $(ARCH)) $(PRJINST_OPTIONS) \
	  $(DESTDIR)$(INSTALL_PREFIX)
endif
endif
endif
endif

#BEGIN MPC-Generated Install Info
#header_files:
#be_include/TAO_IDL_BE_Export.h
#be_include/be_argument.h
#be_include/be_array.h
#be_include/be_attribute.h
#be_include/be_codegen.h
#be_include/be_component.h
#be_include/be_component_fwd.h
#be_include/be_connector.h
#be_include/be_constant.h
#be_include/be_consumes.h
#be_include/be_decl.h
#be_include/be_emits.h
#be_include/be_enum.h
#be_include/be_enum_val.h
#be_include/be_eventtype.h
#be_include/be_eventtype_fwd.h
#be_include/be_exception.h
#be_include/be_expression.h
#be_include/be_extended_port.h
#be_include/be_extern.h
#be_include/be_factory.h
#be_include/be_field.h
#be_include/be_finder.h
#be_include/be_fixed.h
#be_include/be_generator.h
#be_include/be_global.h
#be_include/be_helper.h
#be_include/be_home.h
#be_include/be_identifier_helper.h
#be_include/be_interface.h
#be_include/be_interface_fwd.h
#be_include/be_mirror_port.h
#be_include/be_module.h
#be_include/be_native.h
#be_include/be_null_return_emitter.h
#be_include/be_operation.h
#be_include/be_param_holder.h
#be_include/be_porttype.h
#be_include/be_predefined_type.h
#be_include/be_provides.h
#be_include/be_publishes.h
#be_include/be_root.h
#be_include/be_scope.h
#be_include/be_sequence.h
#be_include/be_string.h
#be_include/be_structure.h
#be_include/be_structure_fwd.h
#be_include/be_template_module.h
#be_include/be_template_module_inst.h
#be_include/be_template_module_ref.h
#be_include/be_type.h
#be_include/be_typedef.h
#be_include/be_union.h
#be_include/be_union_branch.h
#be_include/be_union_fwd.h
#be_include/be_union_label.h
#be_include/be_uses.h
#be_include/be_util.h
#be_include/be_valuebox.h
#be_include/be_valuetype.h
#be_include/be_valuetype_fwd.h
#be_include/be_visitor.h
#be_include/be_visitor_amh_pre_proc.h
#be_include/be_visitor_ami_pre_proc.h
#be_include/be_visitor_any_extracted_type_decl.h
#be_include/be_visitor_arg_traits.h
#be_include/be_visitor_argument.h
#be_include/be_visitor_array.h
#be_include/be_visitor_attr_assign.h
#be_include/be_visitor_attr_init.h
#be_include/be_visitor_attr_return.h
#be_include/be_visitor_attr_setarg_type.h
#be_include/be_visitor_attribute.h
#be_include/be_visitor_ccm_pre_proc.h
#be_include/be_visitor_component.h
#be_include/be_visitor_component_fwd.h
#be_include/be_visitor_component_scope.h
#be_include/be_visitor_connector.h
#be_include/be_visitor_constant.h
#be_include/be_visitor_context.h
#be_include/be_visitor_dds_ts_idl.h
#be_include/be_visitor_decl.h
#be_include/be_visitor_enum.h
#be_include/be_visitor_exception.h
#be_include/be_visitor_field.h
#be_include/be_visitor_home.h
#be_include/be_visitor_interface.h
#be_include/be_visitor_interface_fwd.h
#be_include/be_visitor_member_type_decl.h
#be_include/be_visitor_module.h
#be_include/be_visitor_native.h
#be_include/be_visitor_null_return_value.h
#be_include/be_visitor_operation.h
#be_include/be_visitor_root.h
#be_include/be_visitor_scope.h
#be_include/be_visitor_sequence.h
#be_include/be_visitor_structure.h
#be_include/be_visitor_structure_fwd.h
#be_include/be_visitor_template_export.h
#be_include/be_visitor_traits.h
#be_include/be_visitor_typecode.h
#be_include/be_visitor_typedef.h
#be_include/be_visitor_union.h
#be_include/be_visitor_union_branch.h
#be_include/be_visitor_union_fwd.h
#be_include/be_visitor_valuebox.h
#be_include/be_visitor_valuetype.h
#be_include/be_visitor_valuetype_fwd.h
#be_include/be_visitor_xplicit_pre_proc.h
#be/be_visitor_union/union.h
#be/be_visitor_structure/structure.h
#be/be_visitor_root/root.h
#be/be_visitor_argument/argument.h
#be/be_visitor_array/array.h
#be/be_visitor_valuebox/valuebox.h
#be/be_visitor_component/component.h
#be/be_visitor_valuetype/valuetype.h
#be/be_visitor_exception/exception.h
#be/be_visitor_operation/operation.h
#be/be_visitor_interface/interface.h
#be/be_visitor_attribute/attribute.h
#be/be_visitor_module/module.h
#be/be_visitor_typedef/typedef.h
#
#source_files:
#be/be_argument.cpp
#be/be_array.cpp
#be/be_attribute.cpp
#be/be_codegen.cpp
#be/be_component.cpp
#be/be_component_fwd.cpp
#be/be_connector.cpp
#be/be_constant.cpp
#be/be_consumes.cpp
#be/be_decl.cpp
#be/be_emits.cpp
#be/be_enum.cpp
#be/be_enum_val.cpp
#be/be_eventtype.cpp
#be/be_eventtype_fwd.cpp
#be/be_exception.cpp
#be/be_expression.cpp
#be/be_extended_port.cpp
#be/be_factory.cpp
#be/be_field.cpp
#be/be_finder.cpp
#be/be_fixed.cpp
#be/be_generator.cpp
#be/be_global.cpp
#be/be_helper.cpp
#be/be_home.cpp
#be/be_identifier_helper.cpp
#be/be_init.cpp
#be/be_interface.cpp
#be/be_interface_fwd.cpp
#be/be_mirror_port.cpp
#be/be_module.cpp
#be/be_native.cpp
#be/be_null_return_emitter.cpp
#be/be_operation.cpp
#be/be_param_holder.cpp
#be/be_porttype.cpp
#be/be_predefined_type.cpp
#be/be_produce.cpp
#be/be_provides.cpp
#be/be_publishes.cpp
#be/be_root.cpp
#be/be_scope.cpp
#be/be_sequence.cpp
#be/be_string.cpp
#be/be_structure.cpp
#be/be_structure_fwd.cpp
#be/be_template_module.cpp
#be/be_template_module_inst.cpp
#be/be_template_module_ref.cpp
#be/be_tmplinst.cpp
#be/be_type.cpp
#be/be_typedef.cpp
#be/be_union.cpp
#be/be_union_branch.cpp
#be/be_union_fwd.cpp
#be/be_union_label.cpp
#be/be_uses.cpp
#be/be_util.cpp
#be/be_valuebox.cpp
#be/be_valuetype.cpp
#be/be_valuetype_fwd.cpp
#be/be_visitor.cpp
#be/be_visitor_amh_pre_proc.cpp
#be/be_visitor_ami_pre_proc.cpp
#be/be_visitor_any_extracted_type_decl.cpp
#be/be_visitor_arg_traits.cpp
#be/be_visitor_attr_assign.cpp
#be/be_visitor_attr_init.cpp
#be/be_visitor_attr_return.cpp
#be/be_visitor_attr_setarg_type.cpp
#be/be_visitor_ccm_pre_proc.cpp
#be/be_visitor_component_scope.cpp
#be/be_visitor_context.cpp
#be/be_visitor_dds_ts_idl.cpp
#be/be_visitor_decl.cpp
#be/be_visitor_member_type_decl.cpp
#be/be_visitor_null_return_value.cpp
#be/be_visitor_scope.cpp
#be/be_visitor_template_export.cpp
#be/be_visitor_traits.cpp
#be/be_visitor_xplicit_pre_proc.cpp
#be/be_visitor_argument/arglist.cpp
#be/be_visitor_argument/argument.cpp
#be/be_visitor_argument/invoke_cs.cpp
#be/be_visitor_argument/marshal_ss.cpp
#be/be_visitor_argument/upcall_ss.cpp
#be/be_visitor_argument/vardecl_ss.cpp
#be/be_visitor_array/any_op_ch.cpp
#be/be_visitor_array/any_op_cs.cpp
#be/be_visitor_array/array.cpp
#be/be_visitor_array/array_ch.cpp
#be/be_visitor_array/array_ci.cpp
#be/be_visitor_array/array_cs.cpp
#be/be_visitor_array/cdr_op_ch.cpp
#be/be_visitor_array/cdr_op_cs.cpp
#be/be_visitor_attribute/attribute.cpp
#be/be_visitor_attribute/ccm_init.cpp
#be/be_visitor_attribute/set_from_extracted.cpp
#be/be_visitor_component/component.cpp
#be/be_visitor_component/component_ami_rh_ex_base.cpp
#be/be_visitor_component/component_ami_rh_exh.cpp
#be/be_visitor_component/component_ami_rh_exs.cpp
#be/be_visitor_component/component_ex_idl.cpp
#be/be_visitor_component/component_exh.cpp
#be/be_visitor_component/component_exs.cpp
#be/be_visitor_component/component_svh.cpp
#be/be_visitor_component/component_svs.cpp
#be/be_visitor_component/component_svth.cpp
#be/be_visitor_component/component_svts.cpp
#be/be_visitor_component/context_ex_idl.cpp
#be/be_visitor_component/context_svth.cpp
#be/be_visitor_component/context_svts.cpp
#be/be_visitor_component/executor_ex_idl.cpp
#be/be_visitor_component/executor_exh.cpp
#be/be_visitor_component/executor_exs.cpp
#be/be_visitor_component/executor_exs_attr_init.cpp
#be/be_visitor_component/executor_private_exh.cpp
#be/be_visitor_component/facet_exh.cpp
#be/be_visitor_component/facet_exs.cpp
#be/be_visitor_component/servant_svh.cpp
#be/be_visitor_component/servant_svs.cpp
#be/be_visitor_component_fwd/any_op_ch.cpp
#be/be_visitor_component_fwd/cdr_op_ch.cpp
#be/be_visitor_component_fwd/component_fwd_ch.cpp
#be/be_visitor_connector/connector_ami_exh.cpp
#be/be_visitor_connector/connector_ami_exs.cpp
#be/be_visitor_connector/connector_dds_ex_base.cpp
#be/be_visitor_connector/connector_dds_exh.cpp
#be/be_visitor_connector/connector_dds_exs.cpp
#be/be_visitor_connector/executor_ami_exh.cpp
#be/be_visitor_connector/executor_ami_exs.cpp
#be/be_visitor_connector/facet_ami_exh.cpp
#be/be_visitor_connector/facet_ami_exs.cpp
#be/be_visitor_constant/constant_ch.cpp
#be/be_visitor_constant/constant_cs.cpp
#be/be_visitor_enum/any_op_ch.cpp
#be/be_visitor_enum/any_op_cs.cpp
#be/be_visitor_enum/cdr_op_ch.cpp
#be/be_visitor_enum/cdr_op_cs.cpp
#be/be_visitor_enum/enum_ch.cpp
#be/be_visitor_enum/enum_cs.cpp
#be/be_visitor_exception/any_op_ch.cpp
#be/be_visitor_exception/any_op_cs.cpp
#be/be_visitor_exception/cdr_op_ch.cpp
#be/be_visitor_exception/cdr_op_cs.cpp
#be/be_visitor_exception/ctor_assign.cpp
#be/be_visitor_exception/exception.cpp
#be/be_visitor_exception/exception_ch.cpp
#be/be_visitor_exception/exception_ci.cpp
#be/be_visitor_exception/exception_cs.cpp
#be/be_visitor_exception/exception_ctor.cpp
#be/be_visitor_field/cdr_op_ch.cpp
#be/be_visitor_field/cdr_op_cs.cpp
#be/be_visitor_field/field_ch.cpp
#be/be_visitor_field/field_ci.cpp
#be/be_visitor_field/field_cs.cpp
#be/be_visitor_home/home_ex_idl.cpp
#be/be_visitor_home/home_exh.cpp
#be/be_visitor_home/home_exs.cpp
#be/be_visitor_home/home_svh.cpp
#be/be_visitor_home/home_svs.cpp
#be/be_visitor_interface/amh_ch.cpp
#be/be_visitor_interface/amh_rh_sh.cpp
#be/be_visitor_interface/amh_rh_ss.cpp
#be/be_visitor_interface/amh_sh.cpp
#be/be_visitor_interface/amh_ss.cpp
#be/be_visitor_interface/ami4ccm_conn_ex_idl.cpp
#be/be_visitor_interface/ami4ccm_rh_ex_idl.cpp
#be/be_visitor_interface/ami4ccm_sendc_ex_idl.cpp
#be/be_visitor_interface/any_op_ch.cpp
#be/be_visitor_interface/any_op_cs.cpp
#be/be_visitor_interface/cdr_op_ch.cpp
#be/be_visitor_interface/cdr_op_cs.cpp
#be/be_visitor_interface/direct_proxy_impl_sh.cpp
#be/be_visitor_interface/direct_proxy_impl_ss.cpp
#be/be_visitor_interface/facet_svth.cpp
#be/be_visitor_interface/facet_svts.cpp
#be/be_visitor_interface/interface.cpp
#be/be_visitor_interface/interface_ch.cpp
#be/be_visitor_interface/interface_ci.cpp
#be/be_visitor_interface/interface_cs.cpp
#be/be_visitor_interface/interface_ex_idl.cpp
#be/be_visitor_interface/interface_ih.cpp
#be/be_visitor_interface/interface_is.cpp
#be/be_visitor_interface/interface_sh.cpp
#be/be_visitor_interface/interface_ss.cpp
#be/be_visitor_interface/interface_svth.cpp
#be/be_visitor_interface/interface_svts.cpp
#be/be_visitor_interface/smart_proxy_ch.cpp
#be/be_visitor_interface/smart_proxy_cs.cpp
#be/be_visitor_interface/tie_sh.cpp
#be/be_visitor_interface/tie_ss.cpp
#be/be_visitor_interface_fwd/any_op_ch.cpp
#be/be_visitor_interface_fwd/cdr_op_ch.cpp
#be/be_visitor_interface_fwd/interface_fwd_ch.cpp
#be/be_visitor_module/any_op.cpp
#be/be_visitor_module/cdr_op.cpp
#be/be_visitor_module/module.cpp
#be/be_visitor_module/module_ch.cpp
#be/be_visitor_module/module_ih.cpp
#be/be_visitor_module/module_sh.cpp
#be/be_visitor_native/native_ch.cpp
#be/be_visitor_operation/amh_rh_sh.cpp
#be/be_visitor_operation/amh_rh_ss.cpp
#be/be_visitor_operation/amh_sh.cpp
#be/be_visitor_operation/amh_ss.cpp
#be/be_visitor_operation/ami_cs.cpp
#be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp
#be/be_visitor_operation/arglist.cpp
#be/be_visitor_operation/argument.cpp
#be/be_visitor_operation/argument_invoke.cpp
#be/be_visitor_operation/argument_marshal.cpp
#be/be_visitor_operation/direct_proxy_impl_ss.cpp
#be/be_visitor_operation/exceptlist_cs.cpp
#be/be_visitor_operation/exceptlist_ss.cpp
#be/be_visitor_operation/operation.cpp
#be/be_visitor_operation/operation_ch.cpp
#be/be_visitor_operation/operation_cs.cpp
#be/be_visitor_operation/operation_exs.cpp
#be/be_visitor_operation/operation_ih.cpp
#be/be_visitor_operation/operation_is.cpp
#be/be_visitor_operation/operation_sh.cpp
#be/be_visitor_operation/operation_ss.cpp
#be/be_visitor_operation/operation_svs.cpp
#be/be_visitor_operation/proxy_impl_xh.cpp
#be/be_visitor_operation/rettype.cpp
#be/be_visitor_operation/rettype_return_cs.cpp
#be/be_visitor_operation/smart_proxy_ch.cpp
#be/be_visitor_operation/smart_proxy_cs.cpp
#be/be_visitor_operation/tie_sh.cpp
#be/be_visitor_operation/tie_ss.cpp
#be/be_visitor_operation/upcall_command_ss.cpp
#be/be_visitor_root/any_op.cpp
#be/be_visitor_root/cdr_op.cpp
#be/be_visitor_root/root.cpp
#be/be_visitor_root/root_ch.cpp
#be/be_visitor_root/root_ci.cpp
#be/be_visitor_root/root_cnh.cpp
#be/be_visitor_root/root_cns.cpp
#be/be_visitor_root/root_cs.cpp
#be/be_visitor_root/root_ex_idl.cpp
#be/be_visitor_root/root_exh.cpp
#be/be_visitor_root/root_exs.cpp
#be/be_visitor_root/root_ih.cpp
#be/be_visitor_root/root_is.cpp
#be/be_visitor_root/root_sh.cpp
#be/be_visitor_root/root_ss.cpp
#be/be_visitor_root/root_sth.cpp
#be/be_visitor_root/root_svh.cpp
#be/be_visitor_root/root_svs.cpp
#be/be_visitor_root/root_svth.cpp
#be/be_visitor_root/root_svts.cpp
#be/be_visitor_sequence/any_op_ch.cpp
#be/be_visitor_sequence/any_op_cs.cpp
#be/be_visitor_sequence/buffer_type.cpp
#be/be_visitor_sequence/cdr_op_ch.cpp
#be/be_visitor_sequence/cdr_op_cs.cpp
#be/be_visitor_sequence/sequence_base.cpp
#be/be_visitor_sequence/sequence_ch.cpp
#be/be_visitor_sequence/sequence_cs.cpp
#be/be_visitor_structure/any_op_ch.cpp
#be/be_visitor_structure/any_op_cs.cpp
#be/be_visitor_structure/cdr_op_ch.cpp
#be/be_visitor_structure/cdr_op_cs.cpp
#be/be_visitor_structure/structure.cpp
#be/be_visitor_structure/structure_ch.cpp
#be/be_visitor_structure/structure_ci.cpp
#be/be_visitor_structure/structure_cs.cpp
#be/be_visitor_structure_fwd/structure_fwd_ch.cpp
#be/be_visitor_typecode/alias_typecode.cpp
#be/be_visitor_typecode/enum_typecode.cpp
#be/be_visitor_typecode/objref_typecode.cpp
#be/be_visitor_typecode/struct_typecode.cpp
#be/be_visitor_typecode/typecode_decl.cpp
#be/be_visitor_typecode/typecode_defn.cpp
#be/be_visitor_typecode/union_typecode.cpp
#be/be_visitor_typecode/value_typecode.cpp
#be/be_visitor_typedef/any_op_ch.cpp
#be/be_visitor_typedef/any_op_cs.cpp
#be/be_visitor_typedef/cdr_op_ch.cpp
#be/be_visitor_typedef/cdr_op_cs.cpp
#be/be_visitor_typedef/typedef.cpp
#be/be_visitor_typedef/typedef_ch.cpp
#be/be_visitor_typedef/typedef_ci.cpp
#be/be_visitor_typedef/typedef_cs.cpp
#be/be_visitor_union/any_op_ch.cpp
#be/be_visitor_union/any_op_cs.cpp
#be/be_visitor_union/cdr_op_ch.cpp
#be/be_visitor_union/cdr_op_cs.cpp
#be/be_visitor_union/discriminant_ch.cpp
#be/be_visitor_union/discriminant_ci.cpp
#be/be_visitor_union/discriminant_cs.cpp
#be/be_visitor_union/union.cpp
#be/be_visitor_union/union_ch.cpp
#be/be_visitor_union/union_ci.cpp
#be/be_visitor_union/union_cs.cpp
#be/be_visitor_union_branch/cdr_op_ch.cpp
#be/be_visitor_union_branch/cdr_op_cs.cpp
#be/be_visitor_union_branch/private_ch.cpp
#be/be_visitor_union_branch/public_assign_cs.cpp
#be/be_visitor_union_branch/public_ch.cpp
#be/be_visitor_union_branch/public_ci.cpp
#be/be_visitor_union_branch/public_constructor_cs.cpp
#be/be_visitor_union_branch/public_cs.cpp
#be/be_visitor_union_branch/public_reset_cs.cpp
#be/be_visitor_union_fwd/union_fwd_ch.cpp
#be/be_visitor_valuebox/any_op_ch.cpp
#be/be_visitor_valuebox/any_op_cs.cpp
#be/be_visitor_valuebox/cdr_op_ch.cpp
#be/be_visitor_valuebox/cdr_op_cs.cpp
#be/be_visitor_valuebox/field_ch.cpp
#be/be_visitor_valuebox/field_ci.cpp
#be/be_visitor_valuebox/union_member_ci.cpp
#be/be_visitor_valuebox/valuebox.cpp
#be/be_visitor_valuebox/valuebox_ch.cpp
#be/be_visitor_valuebox/valuebox_ci.cpp
#be/be_visitor_valuebox/valuebox_cs.cpp
#be/be_visitor_valuetype/any_op_ch.cpp
#be/be_visitor_valuetype/any_op_cs.cpp
#be/be_visitor_valuetype/arglist.cpp
#be/be_visitor_valuetype/cdr_op_ch.cpp
#be/be_visitor_valuetype/cdr_op_cs.cpp
#be/be_visitor_valuetype/field_cdr_ch.cpp
#be/be_visitor_valuetype/field_cdr_cs.cpp
#be/be_visitor_valuetype/field_ch.cpp
#be/be_visitor_valuetype/field_ci.cpp
#be/be_visitor_valuetype/field_cs.cpp
#be/be_visitor_valuetype/marshal_ch.cpp
#be/be_visitor_valuetype/marshal_cs.cpp
#be/be_visitor_valuetype/obv_module.cpp
#be/be_visitor_valuetype/valuetype.cpp
#be/be_visitor_valuetype/valuetype_ch.cpp
#be/be_visitor_valuetype/valuetype_ci.cpp
#be/be_visitor_valuetype/valuetype_cs.cpp
#be/be_visitor_valuetype/valuetype_init.cpp
#be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp
#be/be_visitor_valuetype/valuetype_init_ch.cpp
#be/be_visitor_valuetype/valuetype_init_ci.cpp
#be/be_visitor_valuetype/valuetype_init_cs.cpp
#be/be_visitor_valuetype/valuetype_obv_ch.cpp
#be/be_visitor_valuetype/valuetype_obv_ci.cpp
#be/be_visitor_valuetype/valuetype_obv_cs.cpp
#be/be_visitor_valuetype/valuetype_sh.cpp
#be/be_visitor_valuetype/valuetype_ss.cpp
#be/be_visitor_valuetype_fwd/any_op_ch.cpp
#be/be_visitor_valuetype_fwd/cdr_op_ch.cpp
#be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp
#
#build_files:
#tao_idl.mpc
#tao_idl_be.mpc
#tao_idl_fe.mpc
#TAO_IDL.mwc
#TAO_IDL_ACE.mwc
#
#lib_output:
#../../lib TAO_IDL_BE

#END MPC-Generated Install Info

