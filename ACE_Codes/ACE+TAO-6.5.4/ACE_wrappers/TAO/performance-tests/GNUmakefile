# -*- makefile -*-
#----------------------------------------------------------------------------
#       GNU ACE Workspace
#
# 
#
# This file was generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
# MPC Command:
# /home/johnny/DOC_ROOT/stage-6819/ACE_wrappers/bin/mwc.pl -type gnuace -exclude TAO/TAO_ACE.mwc -workers 8 -recurse -hierarchy -relative ACE_ROOT=/home/johnny/DOC_ROOT/stage-6819/ACE_wrappers -relative TAO_ROOT=/home/johnny/DOC_ROOT/stage-6819/ACE_wrappers/TAO
#
#----------------------------------------------------------------------------

MAKEFILE = GNUmakefile

ifeq ($(findstring k,$(MAKEFLAGS)),k)
  KEEP_GOING = -
endif

include $(ACE_ROOT)/include/makeinclude/macros.GNU

all: Anyop-target csd_pt_testinf csd_pt_testservant csd_test_client csd_test_server Callback_Perf_IDL Callback_Client Callback_Server IDL_Cubit_IDL IDL_Cubit_Client IDL_Cubit_Collocation IDL_Cubit_Server DII_Cubit_Client MT_Cubit_IDL MT_Cubit_Server MT_Cubit_Client Single_Threaded_AMH_Latency_Idl Single_Threaded_AMH_Latency_Client Single_Threaded_AMH_Latency_Server AMI_Latency_Idl AMI_Latency_Server AMI_Latency_Client Latency_Collocation DII_Latency_Idl DII_Latency_Client DII_Latency_Server DSI_Latency_Idl DSI_Latency_Client DSI_Latency_Server Deferred_Latency_Idl Deferred_Latency_Client Deferred_Latency_Server Single_Threaded_Latency_Idl Single_Threaded_Latency_Server Single_Threaded_Latency_Client Thread_Per_Connection_Latency_Idl Thread_Per_Connection_Latency_Client Thread_Per_Connection_Latency_Server Thread_Pool_Latency_Idl Thread_Pool_Latency_Server Thread_Pool_Latency_Client Memory_IORsize_Idl Memory_IORsize_Server Memory_IORsize_Client Memory_Growth_Idl Memory_Growth_Client Memory_Growth_Server Create_Reference Demux_Poa_Idl Demux_Poa_Server Demux_Poa_Client Implicit_Activation_Idl Implicit_Activation_Server Implicit_Activation_Client Implicit_Activation_Collocated registration Pluggable_Idl Pluggable_Client Pluggable_Server Protocols_IDL Protocols_Sender Protocols_Distributor Protocols_Receiver RTCORBA_Common ORB_Per_Priority_Client ORB_Per_Priority_Server Single_Endpoint_Client Single_Endpoint_Server Reliable_Oneways_Idl_RT Reliable_Oneways_Client_RT Reliable_Oneways_Server_RT Thread_Pool_RTCorba_Idl Thread_Pool_RTCorba_Server Thread_Pool_RTCorba_Client Single_Threaded_AMH_Sequence_Idl Single_Threaded_AMH_Sequence_Server Single_Threaded_AMH_Sequence_Client ami_sequence_idl ami_sequence_server ami_sequence_client DII_Sequence_Idl DII_Sequence_Client DII_Sequence_Server DSI_Idl DSI_Sequence_Client DSI_Sequence_Server Deferred_Sequence_Idl Deferred_Sequence_Server Deferred_Sequence_Client Sequence_Ops_Time_Idl Sequence_Ops_Time_Test Single_Threaded_Sequence_Idl Single_Threaded_Sequence_Client Single_Threaded_Sequence_Server Thread_Per_Conn_Sequence_Idl Thread_Per_Conn_Sequence_Server Thread_Per_Conn_Sequence_Client Thread_Pool_Sequence_Idl Thread_Pool_Sequence_Client Thread_Pool_Sequence_Server Throughput_Idl Throughput_Client Throughput_Server

depend: Anyop-target-depend csd_pt_testinf-depend csd_pt_testservant-depend csd_test_client-depend csd_test_server-depend Callback_Perf_IDL-depend Callback_Client-depend Callback_Server-depend IDL_Cubit_IDL-depend IDL_Cubit_Client-depend IDL_Cubit_Collocation-depend IDL_Cubit_Server-depend DII_Cubit_Client-depend MT_Cubit_IDL-depend MT_Cubit_Server-depend MT_Cubit_Client-depend Single_Threaded_AMH_Latency_Idl-depend Single_Threaded_AMH_Latency_Client-depend Single_Threaded_AMH_Latency_Server-depend AMI_Latency_Idl-depend AMI_Latency_Server-depend AMI_Latency_Client-depend Latency_Collocation-depend DII_Latency_Idl-depend DII_Latency_Client-depend DII_Latency_Server-depend DSI_Latency_Idl-depend DSI_Latency_Client-depend DSI_Latency_Server-depend Deferred_Latency_Idl-depend Deferred_Latency_Client-depend Deferred_Latency_Server-depend Single_Threaded_Latency_Idl-depend Single_Threaded_Latency_Server-depend Single_Threaded_Latency_Client-depend Thread_Per_Connection_Latency_Idl-depend Thread_Per_Connection_Latency_Client-depend Thread_Per_Connection_Latency_Server-depend Thread_Pool_Latency_Idl-depend Thread_Pool_Latency_Server-depend Thread_Pool_Latency_Client-depend Memory_IORsize_Idl-depend Memory_IORsize_Server-depend Memory_IORsize_Client-depend Memory_Growth_Idl-depend Memory_Growth_Client-depend Memory_Growth_Server-depend Create_Reference-depend Demux_Poa_Idl-depend Demux_Poa_Server-depend Demux_Poa_Client-depend Implicit_Activation_Idl-depend Implicit_Activation_Server-depend Implicit_Activation_Client-depend Implicit_Activation_Collocated-depend registration-depend Pluggable_Idl-depend Pluggable_Client-depend Pluggable_Server-depend Protocols_IDL-depend Protocols_Sender-depend Protocols_Distributor-depend Protocols_Receiver-depend RTCORBA_Common-depend ORB_Per_Priority_Client-depend ORB_Per_Priority_Server-depend Single_Endpoint_Client-depend Single_Endpoint_Server-depend Reliable_Oneways_Idl_RT-depend Reliable_Oneways_Client_RT-depend Reliable_Oneways_Server_RT-depend Thread_Pool_RTCorba_Idl-depend Thread_Pool_RTCorba_Server-depend Thread_Pool_RTCorba_Client-depend Single_Threaded_AMH_Sequence_Idl-depend Single_Threaded_AMH_Sequence_Server-depend Single_Threaded_AMH_Sequence_Client-depend ami_sequence_idl-depend ami_sequence_server-depend ami_sequence_client-depend DII_Sequence_Idl-depend DII_Sequence_Client-depend DII_Sequence_Server-depend DSI_Idl-depend DSI_Sequence_Client-depend DSI_Sequence_Server-depend Deferred_Sequence_Idl-depend Deferred_Sequence_Server-depend Deferred_Sequence_Client-depend Sequence_Ops_Time_Idl-depend Sequence_Ops_Time_Test-depend Single_Threaded_Sequence_Idl-depend Single_Threaded_Sequence_Client-depend Single_Threaded_Sequence_Server-depend Thread_Per_Conn_Sequence_Idl-depend Thread_Per_Conn_Sequence_Server-depend Thread_Per_Conn_Sequence_Client-depend Thread_Pool_Sequence_Idl-depend Thread_Pool_Sequence_Client-depend Thread_Pool_Sequence_Server-depend Throughput_Idl-depend Throughput_Client-depend Throughput_Server-depend

REMAINING_TARGETS := $(filter-out all depend,$(TARGETS_NESTED:.nested=)) $(CUSTOM_TARGETS)
.PHONY: $(REMAINING_TARGETS)

$(REMAINING_TARGETS):
	$(KEEP_GOING)@cd Anyop && $(MAKE) -f GNUmakefile.Anyop $(@)
	$(KEEP_GOING)@cd CSD_Strategy/TestInf && $(MAKE) -f GNUmakefile.csd_pt_testinf $(@)
	$(KEEP_GOING)@cd CSD_Strategy/TestServant && $(MAKE) -f GNUmakefile.csd_pt_testservant $(@)
	$(KEEP_GOING)@cd CSD_Strategy/TestApps && $(MAKE) -f GNUmakefile.csd_test_client $(@)
	$(KEEP_GOING)@cd CSD_Strategy/TestApps && $(MAKE) -f GNUmakefile.csd_test_server $(@)
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Perf_IDL $(@)
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Client $(@)
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Server $(@)
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_IDL $(@)
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Client $(@)
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Collocation $(@)
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Server $(@)
	$(KEEP_GOING)@cd Cubit/TAO/DII_Cubit && $(MAKE) -f GNUmakefile.DII_Cubit_Client $(@)
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_IDL $(@)
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_Server $(@)
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_Client $(@)
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/Collocation && $(MAKE) -f GNUmakefile.Latency_Collocation $(@)
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Client $(@)
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Idl $(@)
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Server $(@)
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Client $(@)
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Idl $(@)
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Server $(@)
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Client $(@)
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Idl $(@)
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Client $(@)
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Server $(@)
	$(KEEP_GOING)@cd POA/Create_Reference && $(MAKE) -f GNUmakefile.Create_Reference $(@)
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Idl $(@)
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Server $(@)
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Client $(@)
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Idl $(@)
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Server $(@)
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Client $(@)
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Collocated $(@)
	$(KEEP_GOING)@cd POA/Object_Creation_And_Registration && $(MAKE) -f GNUmakefile.registration $(@)
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Idl $(@)
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Client $(@)
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Server $(@)
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_IDL $(@)
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Sender $(@)
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Distributor $(@)
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Receiver $(@)
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Common && $(MAKE) -f GNUmakefile.RTCORBA_Common $(@)
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Orb_Per_Priority && $(MAKE) -f GNUmakefile.ORB_Per_Priority_Client $(@)
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Orb_Per_Priority && $(MAKE) -f GNUmakefile.ORB_Per_Priority_Server $(@)
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Single_Endpoint && $(MAKE) -f GNUmakefile.Single_Endpoint_Client $(@)
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Single_Endpoint && $(MAKE) -f GNUmakefile.Single_Endpoint_Server $(@)
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Idl_RT $(@)
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Client_RT $(@)
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Server_RT $(@)
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Idl $(@)
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Server $(@)
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Sequence_Server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Sequence_Operations_Time && $(MAKE) -f GNUmakefile.Sequence_Ops_Time_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Sequence_Operations_Time && $(MAKE) -f GNUmakefile.Sequence_Ops_Time_Test $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Server $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Idl $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Client $(@)
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Server $(@)
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Idl $(@)
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Client $(@)
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Server $(@)

.PHONY: Anyop-target
Anyop-target:
	$(KEEP_GOING)@cd Anyop && $(MAKE) -f GNUmakefile.Anyop all

.PHONY: Anyop-target-depend
Anyop-target-depend:
	$(KEEP_GOING)@cd Anyop && $(MAKE) -f GNUmakefile.Anyop depend

.PHONY: csd_pt_testinf
csd_pt_testinf:
	$(KEEP_GOING)@cd CSD_Strategy/TestInf && $(MAKE) -f GNUmakefile.csd_pt_testinf all

.PHONY: csd_pt_testinf-depend
csd_pt_testinf-depend:
	$(KEEP_GOING)@cd CSD_Strategy/TestInf && $(MAKE) -f GNUmakefile.csd_pt_testinf depend

.PHONY: csd_pt_testservant
csd_pt_testservant: csd_pt_testinf
	$(KEEP_GOING)@cd CSD_Strategy/TestServant && $(MAKE) -f GNUmakefile.csd_pt_testservant all

.PHONY: csd_pt_testservant-depend
csd_pt_testservant-depend:
	$(KEEP_GOING)@cd CSD_Strategy/TestServant && $(MAKE) -f GNUmakefile.csd_pt_testservant depend

.PHONY: csd_test_client
csd_test_client: csd_pt_testinf csd_pt_testservant
	$(KEEP_GOING)@cd CSD_Strategy/TestApps && $(MAKE) -f GNUmakefile.csd_test_client all

.PHONY: csd_test_client-depend
csd_test_client-depend:
	$(KEEP_GOING)@cd CSD_Strategy/TestApps && $(MAKE) -f GNUmakefile.csd_test_client depend

.PHONY: csd_test_server
csd_test_server: csd_pt_testinf csd_pt_testservant
	$(KEEP_GOING)@cd CSD_Strategy/TestApps && $(MAKE) -f GNUmakefile.csd_test_server all

.PHONY: csd_test_server-depend
csd_test_server-depend:
	$(KEEP_GOING)@cd CSD_Strategy/TestApps && $(MAKE) -f GNUmakefile.csd_test_server depend

.PHONY: Callback_Perf_IDL
Callback_Perf_IDL:
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Perf_IDL all

.PHONY: Callback_Perf_IDL-depend
Callback_Perf_IDL-depend:
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Perf_IDL depend

.PHONY: Callback_Client
Callback_Client: Callback_Perf_IDL
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Client all

.PHONY: Callback_Client-depend
Callback_Client-depend:
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Client depend

.PHONY: Callback_Server
Callback_Server: Callback_Perf_IDL Callback_Client
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Server all

.PHONY: Callback_Server-depend
Callback_Server-depend:
	$(KEEP_GOING)@cd Callback && $(MAKE) -f GNUmakefile.Callback_Server depend

.PHONY: IDL_Cubit_IDL
IDL_Cubit_IDL:
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_IDL all

.PHONY: IDL_Cubit_IDL-depend
IDL_Cubit_IDL-depend:
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_IDL depend

.PHONY: IDL_Cubit_Client
IDL_Cubit_Client: IDL_Cubit_IDL
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Client all

.PHONY: IDL_Cubit_Client-depend
IDL_Cubit_Client-depend:
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Client depend

.PHONY: IDL_Cubit_Collocation
IDL_Cubit_Collocation: IDL_Cubit_IDL IDL_Cubit_Client
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Collocation all

.PHONY: IDL_Cubit_Collocation-depend
IDL_Cubit_Collocation-depend:
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Collocation depend

.PHONY: IDL_Cubit_Server
IDL_Cubit_Server: IDL_Cubit_IDL IDL_Cubit_Client IDL_Cubit_Collocation
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Server all

.PHONY: IDL_Cubit_Server-depend
IDL_Cubit_Server-depend:
	$(KEEP_GOING)@cd Cubit/TAO/IDL_Cubit && $(MAKE) -f GNUmakefile.IDL_Cubit_Server depend

.PHONY: DII_Cubit_Client
DII_Cubit_Client: IDL_Cubit_Server
	$(KEEP_GOING)@cd Cubit/TAO/DII_Cubit && $(MAKE) -f GNUmakefile.DII_Cubit_Client all

.PHONY: DII_Cubit_Client-depend
DII_Cubit_Client-depend:
	$(KEEP_GOING)@cd Cubit/TAO/DII_Cubit && $(MAKE) -f GNUmakefile.DII_Cubit_Client depend

.PHONY: MT_Cubit_IDL
MT_Cubit_IDL:
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_IDL all

.PHONY: MT_Cubit_IDL-depend
MT_Cubit_IDL-depend:
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_IDL depend

.PHONY: MT_Cubit_Server
MT_Cubit_Server: MT_Cubit_IDL
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_Server all

.PHONY: MT_Cubit_Server-depend
MT_Cubit_Server-depend:
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_Server depend

.PHONY: MT_Cubit_Client
MT_Cubit_Client: MT_Cubit_IDL MT_Cubit_Server
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_Client all

.PHONY: MT_Cubit_Client-depend
MT_Cubit_Client-depend:
	$(KEEP_GOING)@cd Cubit/TAO/MT_Cubit && $(MAKE) -f GNUmakefile.MT_Cubit_Client depend

.PHONY: Single_Threaded_AMH_Latency_Idl
Single_Threaded_AMH_Latency_Idl:
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Idl all

.PHONY: Single_Threaded_AMH_Latency_Idl-depend
Single_Threaded_AMH_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Idl depend

.PHONY: Single_Threaded_AMH_Latency_Client
Single_Threaded_AMH_Latency_Client: Single_Threaded_AMH_Latency_Idl
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Client all

.PHONY: Single_Threaded_AMH_Latency_Client-depend
Single_Threaded_AMH_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Client depend

.PHONY: Single_Threaded_AMH_Latency_Server
Single_Threaded_AMH_Latency_Server: Single_Threaded_AMH_Latency_Idl Single_Threaded_AMH_Latency_Client
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Server all

.PHONY: Single_Threaded_AMH_Latency_Server-depend
Single_Threaded_AMH_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Latency_Server depend

.PHONY: AMI_Latency_Idl
AMI_Latency_Idl:
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Idl all

.PHONY: AMI_Latency_Idl-depend
AMI_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Idl depend

.PHONY: AMI_Latency_Server
AMI_Latency_Server: AMI_Latency_Idl
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Server all

.PHONY: AMI_Latency_Server-depend
AMI_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Server depend

.PHONY: AMI_Latency_Client
AMI_Latency_Client: AMI_Latency_Idl AMI_Latency_Server
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Client all

.PHONY: AMI_Latency_Client-depend
AMI_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/AMI && $(MAKE) -f GNUmakefile.AMI_Latency_Client depend

.PHONY: Latency_Collocation
Latency_Collocation:
	$(KEEP_GOING)@cd Latency/Collocation && $(MAKE) -f GNUmakefile.Latency_Collocation all

.PHONY: Latency_Collocation-depend
Latency_Collocation-depend:
	$(KEEP_GOING)@cd Latency/Collocation && $(MAKE) -f GNUmakefile.Latency_Collocation depend

.PHONY: DII_Latency_Idl
DII_Latency_Idl:
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Idl all

.PHONY: DII_Latency_Idl-depend
DII_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Idl depend

.PHONY: DII_Latency_Client
DII_Latency_Client: DII_Latency_Idl
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Client all

.PHONY: DII_Latency_Client-depend
DII_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Client depend

.PHONY: DII_Latency_Server
DII_Latency_Server: DII_Latency_Idl DII_Latency_Client
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Server all

.PHONY: DII_Latency_Server-depend
DII_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/DII && $(MAKE) -f GNUmakefile.DII_Latency_Server depend

.PHONY: DSI_Latency_Idl
DSI_Latency_Idl:
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Idl all

.PHONY: DSI_Latency_Idl-depend
DSI_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Idl depend

.PHONY: DSI_Latency_Client
DSI_Latency_Client: DSI_Latency_Idl
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Client all

.PHONY: DSI_Latency_Client-depend
DSI_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Client depend

.PHONY: DSI_Latency_Server
DSI_Latency_Server: DSI_Latency_Idl
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Server all

.PHONY: DSI_Latency_Server-depend
DSI_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Latency_Server depend

.PHONY: Deferred_Latency_Idl
Deferred_Latency_Idl:
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Idl all

.PHONY: Deferred_Latency_Idl-depend
Deferred_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Idl depend

.PHONY: Deferred_Latency_Client
Deferred_Latency_Client: Deferred_Latency_Idl
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Client all

.PHONY: Deferred_Latency_Client-depend
Deferred_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Client depend

.PHONY: Deferred_Latency_Server
Deferred_Latency_Server: Deferred_Latency_Idl Deferred_Latency_Client
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Server all

.PHONY: Deferred_Latency_Server-depend
Deferred_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Latency_Server depend

.PHONY: Single_Threaded_Latency_Idl
Single_Threaded_Latency_Idl:
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Idl all

.PHONY: Single_Threaded_Latency_Idl-depend
Single_Threaded_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Idl depend

.PHONY: Single_Threaded_Latency_Server
Single_Threaded_Latency_Server: Single_Threaded_Latency_Idl
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Server all

.PHONY: Single_Threaded_Latency_Server-depend
Single_Threaded_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Server depend

.PHONY: Single_Threaded_Latency_Client
Single_Threaded_Latency_Client: Single_Threaded_Latency_Idl Single_Threaded_Latency_Server
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Client all

.PHONY: Single_Threaded_Latency_Client-depend
Single_Threaded_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Latency_Client depend

.PHONY: Thread_Per_Connection_Latency_Idl
Thread_Per_Connection_Latency_Idl:
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Idl all

.PHONY: Thread_Per_Connection_Latency_Idl-depend
Thread_Per_Connection_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Idl depend

.PHONY: Thread_Per_Connection_Latency_Client
Thread_Per_Connection_Latency_Client: Thread_Per_Connection_Latency_Idl
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Client all

.PHONY: Thread_Per_Connection_Latency_Client-depend
Thread_Per_Connection_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Client depend

.PHONY: Thread_Per_Connection_Latency_Server
Thread_Per_Connection_Latency_Server: Thread_Per_Connection_Latency_Idl Thread_Per_Connection_Latency_Client
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Server all

.PHONY: Thread_Per_Connection_Latency_Server-depend
Thread_Per_Connection_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Connection_Latency_Server depend

.PHONY: Thread_Pool_Latency_Idl
Thread_Pool_Latency_Idl:
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Idl all

.PHONY: Thread_Pool_Latency_Idl-depend
Thread_Pool_Latency_Idl-depend:
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Idl depend

.PHONY: Thread_Pool_Latency_Server
Thread_Pool_Latency_Server: Thread_Pool_Latency_Idl
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Server all

.PHONY: Thread_Pool_Latency_Server-depend
Thread_Pool_Latency_Server-depend:
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Server depend

.PHONY: Thread_Pool_Latency_Client
Thread_Pool_Latency_Client: Thread_Pool_Latency_Idl Thread_Pool_Latency_Server
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Client all

.PHONY: Thread_Pool_Latency_Client-depend
Thread_Pool_Latency_Client-depend:
	$(KEEP_GOING)@cd Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Latency_Client depend

.PHONY: Memory_IORsize_Idl
Memory_IORsize_Idl:
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Idl all

.PHONY: Memory_IORsize_Idl-depend
Memory_IORsize_Idl-depend:
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Idl depend

.PHONY: Memory_IORsize_Server
Memory_IORsize_Server: Memory_IORsize_Idl
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Server all

.PHONY: Memory_IORsize_Server-depend
Memory_IORsize_Server-depend:
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Server depend

.PHONY: Memory_IORsize_Client
Memory_IORsize_Client: Memory_IORsize_Idl Memory_IORsize_Server
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Client all

.PHONY: Memory_IORsize_Client-depend
Memory_IORsize_Client-depend:
	$(KEEP_GOING)@cd Memory/IORsize && $(MAKE) -f GNUmakefile.Memory_IORsize_Client depend

.PHONY: Memory_Growth_Idl
Memory_Growth_Idl:
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Idl all

.PHONY: Memory_Growth_Idl-depend
Memory_Growth_Idl-depend:
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Idl depend

.PHONY: Memory_Growth_Client
Memory_Growth_Client: Memory_Growth_Idl
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Client all

.PHONY: Memory_Growth_Client-depend
Memory_Growth_Client-depend:
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Client depend

.PHONY: Memory_Growth_Server
Memory_Growth_Server: Memory_Growth_Idl Memory_Growth_Client
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Server all

.PHONY: Memory_Growth_Server-depend
Memory_Growth_Server-depend:
	$(KEEP_GOING)@cd Memory/Single_Threaded && $(MAKE) -f GNUmakefile.Memory_Growth_Server depend

.PHONY: Create_Reference
Create_Reference:
	$(KEEP_GOING)@cd POA/Create_Reference && $(MAKE) -f GNUmakefile.Create_Reference all

.PHONY: Create_Reference-depend
Create_Reference-depend:
	$(KEEP_GOING)@cd POA/Create_Reference && $(MAKE) -f GNUmakefile.Create_Reference depend

.PHONY: Demux_Poa_Idl
Demux_Poa_Idl:
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Idl all

.PHONY: Demux_Poa_Idl-depend
Demux_Poa_Idl-depend:
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Idl depend

.PHONY: Demux_Poa_Server
Demux_Poa_Server: Demux_Poa_Idl
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Server all

.PHONY: Demux_Poa_Server-depend
Demux_Poa_Server-depend:
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Server depend

.PHONY: Demux_Poa_Client
Demux_Poa_Client: Demux_Poa_Idl Demux_Poa_Server
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Client all

.PHONY: Demux_Poa_Client-depend
Demux_Poa_Client-depend:
	$(KEEP_GOING)@cd POA/Demux && $(MAKE) -f GNUmakefile.Demux_Poa_Client depend

.PHONY: Implicit_Activation_Idl
Implicit_Activation_Idl:
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Idl all

.PHONY: Implicit_Activation_Idl-depend
Implicit_Activation_Idl-depend:
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Idl depend

.PHONY: Implicit_Activation_Server
Implicit_Activation_Server: Implicit_Activation_Idl
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Server all

.PHONY: Implicit_Activation_Server-depend
Implicit_Activation_Server-depend:
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Server depend

.PHONY: Implicit_Activation_Client
Implicit_Activation_Client: Implicit_Activation_Idl Implicit_Activation_Server
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Client all

.PHONY: Implicit_Activation_Client-depend
Implicit_Activation_Client-depend:
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Client depend

.PHONY: Implicit_Activation_Collocated
Implicit_Activation_Collocated: Implicit_Activation_Idl Implicit_Activation_Server
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Collocated all

.PHONY: Implicit_Activation_Collocated-depend
Implicit_Activation_Collocated-depend:
	$(KEEP_GOING)@cd POA/Implicit_Activation && $(MAKE) -f GNUmakefile.Implicit_Activation_Collocated depend

.PHONY: registration
registration:
	$(KEEP_GOING)@cd POA/Object_Creation_And_Registration && $(MAKE) -f GNUmakefile.registration all

.PHONY: registration-depend
registration-depend:
	$(KEEP_GOING)@cd POA/Object_Creation_And_Registration && $(MAKE) -f GNUmakefile.registration depend

.PHONY: Pluggable_Idl
Pluggable_Idl:
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Idl all

.PHONY: Pluggable_Idl-depend
Pluggable_Idl-depend:
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Idl depend

.PHONY: Pluggable_Client
Pluggable_Client: Pluggable_Idl
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Client all

.PHONY: Pluggable_Client-depend
Pluggable_Client-depend:
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Client depend

.PHONY: Pluggable_Server
Pluggable_Server: Pluggable_Idl Pluggable_Client
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Server all

.PHONY: Pluggable_Server-depend
Pluggable_Server-depend:
	$(KEEP_GOING)@cd Pluggable && $(MAKE) -f GNUmakefile.Pluggable_Server depend

.PHONY: Protocols_IDL
Protocols_IDL:
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_IDL all

.PHONY: Protocols_IDL-depend
Protocols_IDL-depend:
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_IDL depend

.PHONY: Protocols_Sender
Protocols_Sender: Protocols_IDL
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Sender all

.PHONY: Protocols_Sender-depend
Protocols_Sender-depend:
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Sender depend

.PHONY: Protocols_Distributor
Protocols_Distributor: Protocols_IDL Protocols_Sender
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Distributor all

.PHONY: Protocols_Distributor-depend
Protocols_Distributor-depend:
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Distributor depend

.PHONY: Protocols_Receiver
Protocols_Receiver: Protocols_IDL Protocols_Sender Protocols_Distributor
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Receiver all

.PHONY: Protocols_Receiver-depend
Protocols_Receiver-depend:
	$(KEEP_GOING)@cd Protocols && $(MAKE) -f GNUmakefile.Protocols_Receiver depend

.PHONY: RTCORBA_Common
RTCORBA_Common:
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Common && $(MAKE) -f GNUmakefile.RTCORBA_Common all

.PHONY: RTCORBA_Common-depend
RTCORBA_Common-depend:
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Common && $(MAKE) -f GNUmakefile.RTCORBA_Common depend

.PHONY: ORB_Per_Priority_Client
ORB_Per_Priority_Client: RTCORBA_Common
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Orb_Per_Priority && $(MAKE) -f GNUmakefile.ORB_Per_Priority_Client all

.PHONY: ORB_Per_Priority_Client-depend
ORB_Per_Priority_Client-depend:
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Orb_Per_Priority && $(MAKE) -f GNUmakefile.ORB_Per_Priority_Client depend

.PHONY: ORB_Per_Priority_Server
ORB_Per_Priority_Server: RTCORBA_Common
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Orb_Per_Priority && $(MAKE) -f GNUmakefile.ORB_Per_Priority_Server all

.PHONY: ORB_Per_Priority_Server-depend
ORB_Per_Priority_Server-depend:
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Orb_Per_Priority && $(MAKE) -f GNUmakefile.ORB_Per_Priority_Server depend

.PHONY: Single_Endpoint_Client
Single_Endpoint_Client: RTCORBA_Common
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Single_Endpoint && $(MAKE) -f GNUmakefile.Single_Endpoint_Client all

.PHONY: Single_Endpoint_Client-depend
Single_Endpoint_Client-depend:
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Single_Endpoint && $(MAKE) -f GNUmakefile.Single_Endpoint_Client depend

.PHONY: Single_Endpoint_Server
Single_Endpoint_Server: RTCORBA_Common
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Single_Endpoint && $(MAKE) -f GNUmakefile.Single_Endpoint_Server all

.PHONY: Single_Endpoint_Server-depend
Single_Endpoint_Server-depend:
	$(KEEP_GOING)@cd RTCorba/Multiple_Endpoints/Single_Endpoint && $(MAKE) -f GNUmakefile.Single_Endpoint_Server depend

.PHONY: Reliable_Oneways_Idl_RT
Reliable_Oneways_Idl_RT:
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Idl_RT all

.PHONY: Reliable_Oneways_Idl_RT-depend
Reliable_Oneways_Idl_RT-depend:
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Idl_RT depend

.PHONY: Reliable_Oneways_Client_RT
Reliable_Oneways_Client_RT: Reliable_Oneways_Idl_RT
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Client_RT all

.PHONY: Reliable_Oneways_Client_RT-depend
Reliable_Oneways_Client_RT-depend:
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Client_RT depend

.PHONY: Reliable_Oneways_Server_RT
Reliable_Oneways_Server_RT: Reliable_Oneways_Idl_RT Reliable_Oneways_Client_RT
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Server_RT all

.PHONY: Reliable_Oneways_Server_RT-depend
Reliable_Oneways_Server_RT-depend:
	$(KEEP_GOING)@cd RTCorba/Oneways/Reliable && $(MAKE) -f GNUmakefile.Reliable_Oneways_Server_RT depend

.PHONY: Thread_Pool_RTCorba_Idl
Thread_Pool_RTCorba_Idl:
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Idl all

.PHONY: Thread_Pool_RTCorba_Idl-depend
Thread_Pool_RTCorba_Idl-depend:
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Idl depend

.PHONY: Thread_Pool_RTCorba_Server
Thread_Pool_RTCorba_Server: Thread_Pool_RTCorba_Idl
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Server all

.PHONY: Thread_Pool_RTCorba_Server-depend
Thread_Pool_RTCorba_Server-depend:
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Server depend

.PHONY: Thread_Pool_RTCorba_Client
Thread_Pool_RTCorba_Client: Thread_Pool_RTCorba_Idl Thread_Pool_RTCorba_Server
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Client all

.PHONY: Thread_Pool_RTCorba_Client-depend
Thread_Pool_RTCorba_Client-depend:
	$(KEEP_GOING)@cd RTCorba/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_RTCorba_Client depend

.PHONY: Single_Threaded_AMH_Sequence_Idl
Single_Threaded_AMH_Sequence_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Idl all

.PHONY: Single_Threaded_AMH_Sequence_Idl-depend
Single_Threaded_AMH_Sequence_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Idl depend

.PHONY: Single_Threaded_AMH_Sequence_Server
Single_Threaded_AMH_Sequence_Server: Single_Threaded_AMH_Sequence_Idl
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Server all

.PHONY: Single_Threaded_AMH_Sequence_Server-depend
Single_Threaded_AMH_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Server depend

.PHONY: Single_Threaded_AMH_Sequence_Client
Single_Threaded_AMH_Sequence_Client: Single_Threaded_AMH_Sequence_Idl Single_Threaded_AMH_Sequence_Server
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Client all

.PHONY: Single_Threaded_AMH_Sequence_Client-depend
Single_Threaded_AMH_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/AMH_Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_AMH_Sequence_Client depend

.PHONY: ami_sequence_idl
ami_sequence_idl:
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_idl all

.PHONY: ami_sequence_idl-depend
ami_sequence_idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_idl depend

.PHONY: ami_sequence_server
ami_sequence_server: ami_sequence_idl
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_server all

.PHONY: ami_sequence_server-depend
ami_sequence_server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_server depend

.PHONY: ami_sequence_client
ami_sequence_client: ami_sequence_idl ami_sequence_server
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_client all

.PHONY: ami_sequence_client-depend
ami_sequence_client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/AMI && $(MAKE) -f GNUmakefile.ami_sequence_client depend

.PHONY: DII_Sequence_Idl
DII_Sequence_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Idl all

.PHONY: DII_Sequence_Idl-depend
DII_Sequence_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Idl depend

.PHONY: DII_Sequence_Client
DII_Sequence_Client: DII_Sequence_Idl
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Client all

.PHONY: DII_Sequence_Client-depend
DII_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Client depend

.PHONY: DII_Sequence_Server
DII_Sequence_Server: DII_Sequence_Idl DII_Sequence_Client
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Server all

.PHONY: DII_Sequence_Server-depend
DII_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/DII && $(MAKE) -f GNUmakefile.DII_Sequence_Server depend

.PHONY: DSI_Idl
DSI_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Idl all

.PHONY: DSI_Idl-depend
DSI_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Idl depend

.PHONY: DSI_Sequence_Client
DSI_Sequence_Client: DSI_Idl
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Sequence_Client all

.PHONY: DSI_Sequence_Client-depend
DSI_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Sequence_Client depend

.PHONY: DSI_Sequence_Server
DSI_Sequence_Server: DSI_Idl DSI_Sequence_Client
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Sequence_Server all

.PHONY: DSI_Sequence_Server-depend
DSI_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/DSI && $(MAKE) -f GNUmakefile.DSI_Sequence_Server depend

.PHONY: Deferred_Sequence_Idl
Deferred_Sequence_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Idl all

.PHONY: Deferred_Sequence_Idl-depend
Deferred_Sequence_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Idl depend

.PHONY: Deferred_Sequence_Server
Deferred_Sequence_Server: Deferred_Sequence_Idl
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Server all

.PHONY: Deferred_Sequence_Server-depend
Deferred_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Server depend

.PHONY: Deferred_Sequence_Client
Deferred_Sequence_Client: Deferred_Sequence_Idl Deferred_Sequence_Server
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Client all

.PHONY: Deferred_Sequence_Client-depend
Deferred_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Deferred && $(MAKE) -f GNUmakefile.Deferred_Sequence_Client depend

.PHONY: Sequence_Ops_Time_Idl
Sequence_Ops_Time_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/Sequence_Operations_Time && $(MAKE) -f GNUmakefile.Sequence_Ops_Time_Idl all

.PHONY: Sequence_Ops_Time_Idl-depend
Sequence_Ops_Time_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Sequence_Operations_Time && $(MAKE) -f GNUmakefile.Sequence_Ops_Time_Idl depend

.PHONY: Sequence_Ops_Time_Test
Sequence_Ops_Time_Test: Sequence_Ops_Time_Idl
	$(KEEP_GOING)@cd Sequence_Latency/Sequence_Operations_Time && $(MAKE) -f GNUmakefile.Sequence_Ops_Time_Test all

.PHONY: Sequence_Ops_Time_Test-depend
Sequence_Ops_Time_Test-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Sequence_Operations_Time && $(MAKE) -f GNUmakefile.Sequence_Ops_Time_Test depend

.PHONY: Single_Threaded_Sequence_Idl
Single_Threaded_Sequence_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Idl all

.PHONY: Single_Threaded_Sequence_Idl-depend
Single_Threaded_Sequence_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Idl depend

.PHONY: Single_Threaded_Sequence_Client
Single_Threaded_Sequence_Client: Single_Threaded_Sequence_Idl
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Client all

.PHONY: Single_Threaded_Sequence_Client-depend
Single_Threaded_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Client depend

.PHONY: Single_Threaded_Sequence_Server
Single_Threaded_Sequence_Server: Single_Threaded_Sequence_Idl Single_Threaded_Sequence_Client
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Server all

.PHONY: Single_Threaded_Sequence_Server-depend
Single_Threaded_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Single_Threaded && $(MAKE) -f GNUmakefile.Single_Threaded_Sequence_Server depend

.PHONY: Thread_Per_Conn_Sequence_Idl
Thread_Per_Conn_Sequence_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Idl all

.PHONY: Thread_Per_Conn_Sequence_Idl-depend
Thread_Per_Conn_Sequence_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Idl depend

.PHONY: Thread_Per_Conn_Sequence_Server
Thread_Per_Conn_Sequence_Server: Thread_Per_Conn_Sequence_Idl
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Server all

.PHONY: Thread_Per_Conn_Sequence_Server-depend
Thread_Per_Conn_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Server depend

.PHONY: Thread_Per_Conn_Sequence_Client
Thread_Per_Conn_Sequence_Client: Thread_Per_Conn_Sequence_Idl Thread_Per_Conn_Sequence_Server
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Client all

.PHONY: Thread_Per_Conn_Sequence_Client-depend
Thread_Per_Conn_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Per_Connection && $(MAKE) -f GNUmakefile.Thread_Per_Conn_Sequence_Client depend

.PHONY: Thread_Pool_Sequence_Idl
Thread_Pool_Sequence_Idl:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Idl all

.PHONY: Thread_Pool_Sequence_Idl-depend
Thread_Pool_Sequence_Idl-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Idl depend

.PHONY: Thread_Pool_Sequence_Client
Thread_Pool_Sequence_Client: Thread_Pool_Sequence_Idl
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Client all

.PHONY: Thread_Pool_Sequence_Client-depend
Thread_Pool_Sequence_Client-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Client depend

.PHONY: Thread_Pool_Sequence_Server
Thread_Pool_Sequence_Server: Thread_Pool_Sequence_Idl Thread_Pool_Sequence_Client
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Server all

.PHONY: Thread_Pool_Sequence_Server-depend
Thread_Pool_Sequence_Server-depend:
	$(KEEP_GOING)@cd Sequence_Latency/Thread_Pool && $(MAKE) -f GNUmakefile.Thread_Pool_Sequence_Server depend

.PHONY: Throughput_Idl
Throughput_Idl:
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Idl all

.PHONY: Throughput_Idl-depend
Throughput_Idl-depend:
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Idl depend

.PHONY: Throughput_Client
Throughput_Client: Throughput_Idl
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Client all

.PHONY: Throughput_Client-depend
Throughput_Client-depend:
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Client depend

.PHONY: Throughput_Server
Throughput_Server: Throughput_Idl Throughput_Client
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Server all

.PHONY: Throughput_Server-depend
Throughput_Server-depend:
	$(KEEP_GOING)@cd Throughput && $(MAKE) -f GNUmakefile.Throughput_Server depend

project_name_list:
	@echo Anyop-target
	@echo csd_test_client
	@echo csd_test_server
	@echo csd_pt_testinf
	@echo csd_pt_testservant
	@echo Callback_Client
	@echo Callback_Perf_IDL
	@echo Callback_Server
	@echo DII_Cubit_Client
	@echo IDL_Cubit_Client
	@echo IDL_Cubit_Collocation
	@echo IDL_Cubit_IDL
	@echo IDL_Cubit_Server
	@echo MT_Cubit_Client
	@echo MT_Cubit_IDL
	@echo MT_Cubit_Server
	@echo Single_Threaded_AMH_Latency_Client
	@echo Single_Threaded_AMH_Latency_Idl
	@echo Single_Threaded_AMH_Latency_Server
	@echo AMI_Latency_Client
	@echo AMI_Latency_Idl
	@echo AMI_Latency_Server
	@echo Latency_Collocation
	@echo DII_Latency_Client
	@echo DII_Latency_Idl
	@echo DII_Latency_Server
	@echo DSI_Latency_Client
	@echo DSI_Latency_Idl
	@echo DSI_Latency_Server
	@echo Deferred_Latency_Client
	@echo Deferred_Latency_Idl
	@echo Deferred_Latency_Server
	@echo Single_Threaded_Latency_Client
	@echo Single_Threaded_Latency_Idl
	@echo Single_Threaded_Latency_Server
	@echo Thread_Per_Connection_Latency_Client
	@echo Thread_Per_Connection_Latency_Idl
	@echo Thread_Per_Connection_Latency_Server
	@echo Thread_Pool_Latency_Client
	@echo Thread_Pool_Latency_Idl
	@echo Thread_Pool_Latency_Server
	@echo Memory_IORsize_Client
	@echo Memory_IORsize_Idl
	@echo Memory_IORsize_Server
	@echo Memory_Growth_Client
	@echo Memory_Growth_Idl
	@echo Memory_Growth_Server
	@echo Create_Reference
	@echo Demux_Poa_Client
	@echo Demux_Poa_Idl
	@echo Demux_Poa_Server
	@echo Implicit_Activation_Client
	@echo Implicit_Activation_Collocated
	@echo Implicit_Activation_Idl
	@echo Implicit_Activation_Server
	@echo registration
	@echo Pluggable_Client
	@echo Pluggable_Idl
	@echo Pluggable_Server
	@echo Protocols_Distributor
	@echo Protocols_IDL
	@echo Protocols_Receiver
	@echo Protocols_Sender
	@echo RTCORBA_Common
	@echo ORB_Per_Priority_Client
	@echo ORB_Per_Priority_Server
	@echo Single_Endpoint_Client
	@echo Single_Endpoint_Server
	@echo Reliable_Oneways_Client_RT
	@echo Reliable_Oneways_Idl_RT
	@echo Reliable_Oneways_Server_RT
	@echo Thread_Pool_RTCorba_Client
	@echo Thread_Pool_RTCorba_Idl
	@echo Thread_Pool_RTCorba_Server
	@echo Single_Threaded_AMH_Sequence_Client
	@echo Single_Threaded_AMH_Sequence_Idl
	@echo Single_Threaded_AMH_Sequence_Server
	@echo ami_sequence_client
	@echo ami_sequence_idl
	@echo ami_sequence_server
	@echo DII_Sequence_Client
	@echo DII_Sequence_Idl
	@echo DII_Sequence_Server
	@echo DSI_Idl
	@echo DSI_Sequence_Client
	@echo DSI_Sequence_Server
	@echo Deferred_Sequence_Client
	@echo Deferred_Sequence_Idl
	@echo Deferred_Sequence_Server
	@echo Sequence_Ops_Time_Idl
	@echo Sequence_Ops_Time_Test
	@echo Single_Threaded_Sequence_Client
	@echo Single_Threaded_Sequence_Idl
	@echo Single_Threaded_Sequence_Server
	@echo Thread_Per_Conn_Sequence_Client
	@echo Thread_Per_Conn_Sequence_Idl
	@echo Thread_Per_Conn_Sequence_Server
	@echo Thread_Pool_Sequence_Client
	@echo Thread_Pool_Sequence_Idl
	@echo Thread_Pool_Sequence_Server
	@echo Throughput_Client
	@echo Throughput_Idl
	@echo Throughput_Server
