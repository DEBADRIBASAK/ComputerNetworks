# -*- makefile -*-
#----------------------------------------------------------------------------
#       GNU ACE Workspace
#
# 
#
# This file was generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
# MPC Command:
# /home/johnny/DOC_ROOT/stage-6819/ACE_wrappers/bin/mwc.pl -type gnuace -exclude TAO/TAO_ACE.mwc -workers 8 -recurse -hierarchy -relative ACE_ROOT=/home/johnny/DOC_ROOT/stage-6819/ACE_wrappers -relative TAO_ROOT=/home/johnny/DOC_ROOT/stage-6819/ACE_wrappers/TAO
#
#----------------------------------------------------------------------------

MAKEFILE = GNUmakefile

ifeq ($(findstring k,$(MAKEFLAGS)),k)
  KEEP_GOING = -
endif

include $(ACE_ROOT)/include/makeinclude/macros.GNU

all: AO AO2 ARGV_Example Config_HA_Status Get_Opt Get_Opt_Long Allocator Array Containers_Hash_Map Containers_Map_Manager DLList Hash_Map_Hash Map_Manager_Specialization Queues RB_Tree RB_Tree_Functors Sets Stacks Change_Instance_Default Change_Mask Howto_Syslog Simple1 Simple2 Trace_Return Use_Callback Use_Callback2 Use_LogManager Use_Logger Use_Logging_Server Use_Logging_Strategy Use_Multiple_Sinks Use_Ostream Use_Stderr Use_Syslog Wrap_Macros Wrap_Macros_Alt UDP_Broadcast UDP_Multicast UDP_Unicast Nodelocal_Shared Netlocal Netlocal_Reader Nodelocal Nodelocal_Shared_Reader HA_Proactive_Status Process_Manager_Death Process_Manager_Spawn Process_Mutex Spawn Client HAStatus HAStatus_AC Reactor_Timers Reschedule Schedule_Timers Timer_Cancel Timer_State_Data Malloc Mem_Map PI_Malloc Pool_Growth Shared_Memory_Hash_Map SigAction SigGuard SigHandler SigHandlers SigInfo Sockets_Basic Sockets_Basic_Robust Sockets_Iovec Sockets_Server Answerer HA_Configurable_Server_Dynamic HA_Configurable_Server_Static Svc_Config_HA_Status Async_Cancel Coop_Cancel ExitHandler Pool Priorities Signals Signals2 Start_Hook State Futures LF_ThreadPool TP_Reactor Task_ThreadPool ThreadPool Atomic_Op Barrier Mutex RW_Lock Semaphore TSS Tokens Tokens_Deadlock Activate Condition_Variables Guards Message_Blocks Message_Queue Mutexes Alarm Task Timers-target Upcall

depend: AO-depend AO2-depend ARGV_Example-depend Config_HA_Status-depend Get_Opt-depend Get_Opt_Long-depend Allocator-depend Array-depend Containers_Hash_Map-depend Containers_Map_Manager-depend DLList-depend Hash_Map_Hash-depend Map_Manager_Specialization-depend Queues-depend RB_Tree-depend RB_Tree_Functors-depend Sets-depend Stacks-depend Change_Instance_Default-depend Change_Mask-depend Howto_Syslog-depend Simple1-depend Simple2-depend Trace_Return-depend Use_Callback-depend Use_Callback2-depend Use_LogManager-depend Use_Logger-depend Use_Logging_Server-depend Use_Logging_Strategy-depend Use_Multiple_Sinks-depend Use_Ostream-depend Use_Stderr-depend Use_Syslog-depend Wrap_Macros-depend Wrap_Macros_Alt-depend UDP_Broadcast-depend UDP_Multicast-depend UDP_Unicast-depend Nodelocal_Shared-depend Netlocal-depend Netlocal_Reader-depend Nodelocal-depend Nodelocal_Shared_Reader-depend HA_Proactive_Status-depend Process_Manager_Death-depend Process_Manager_Spawn-depend Process_Mutex-depend Spawn-depend Client-depend HAStatus-depend HAStatus_AC-depend Reactor_Timers-depend Reschedule-depend Schedule_Timers-depend Timer_Cancel-depend Timer_State_Data-depend Malloc-depend Mem_Map-depend PI_Malloc-depend Pool_Growth-depend Shared_Memory_Hash_Map-depend SigAction-depend SigGuard-depend SigHandler-depend SigHandlers-depend SigInfo-depend Sockets_Basic-depend Sockets_Basic_Robust-depend Sockets_Iovec-depend Sockets_Server-depend Answerer-depend HA_Configurable_Server_Dynamic-depend HA_Configurable_Server_Static-depend Svc_Config_HA_Status-depend Async_Cancel-depend Coop_Cancel-depend ExitHandler-depend Pool-depend Priorities-depend Signals-depend Signals2-depend Start_Hook-depend State-depend Futures-depend LF_ThreadPool-depend TP_Reactor-depend Task_ThreadPool-depend ThreadPool-depend Atomic_Op-depend Barrier-depend Mutex-depend RW_Lock-depend Semaphore-depend TSS-depend Tokens-depend Tokens_Deadlock-depend Activate-depend Condition_Variables-depend Guards-depend Message_Blocks-depend Message_Queue-depend Mutexes-depend Alarm-depend Task-depend Timers-target-depend Upcall-depend

REMAINING_TARGETS := $(filter-out all depend,$(TARGETS_NESTED:.nested=)) $(CUSTOM_TARGETS)
.PHONY: $(REMAINING_TARGETS)

$(REMAINING_TARGETS):
	$(KEEP_GOING)@cd Active_Objects && $(MAKE) -f GNUmakefile.AO $(@)
	$(KEEP_GOING)@cd Active_Objects && $(MAKE) -f GNUmakefile.AO2 $(@)
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.ARGV_Example $(@)
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Config_HA_Status $(@)
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Get_Opt $(@)
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Get_Opt_Long $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Allocator $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Array $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Containers_Hash_Map $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Containers_Map_Manager $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.DLList $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Hash_Map_Hash $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Map_Manager_Specialization $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Queues $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.RB_Tree $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.RB_Tree_Functors $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Sets $(@)
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Stacks $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Change_Instance_Default $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Change_Mask $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Howto_Syslog $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Simple1 $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Simple2 $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Trace_Return $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Callback $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Callback2 $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_LogManager $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logger $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logging_Server $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logging_Strategy $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Multiple_Sinks $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Ostream $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Stderr $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Syslog $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Wrap_Macros $(@)
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Wrap_Macros_Alt $(@)
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Broadcast $(@)
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Multicast $(@)
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Unicast $(@)
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal_Shared $(@)
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Netlocal $(@)
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Netlocal_Reader $(@)
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal $(@)
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal_Shared_Reader $(@)
	$(KEEP_GOING)@cd Proactor && $(MAKE) -f GNUmakefile.HA_Proactive_Status $(@)
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Manager_Death $(@)
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Manager_Spawn $(@)
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Mutex $(@)
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Spawn $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Client $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.HAStatus $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.HAStatus_AC $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Reactor_Timers $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Reschedule $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Schedule_Timers $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Timer_Cancel $(@)
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Timer_State_Data $(@)
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Malloc $(@)
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Mem_Map $(@)
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.PI_Malloc $(@)
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Pool_Growth $(@)
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Shared_Memory_Hash_Map $(@)
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigAction $(@)
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigGuard $(@)
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigHandler $(@)
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigHandlers $(@)
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigInfo $(@)
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Basic $(@)
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Basic_Robust $(@)
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Iovec $(@)
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Server $(@)
	$(KEEP_GOING)@cd Streams && $(MAKE) -f GNUmakefile.Answerer $(@)
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.HA_Configurable_Server_Dynamic $(@)
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.HA_Configurable_Server_Static $(@)
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.Svc_Config_HA_Status $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Async_Cancel $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Coop_Cancel $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.ExitHandler $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Pool $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Priorities $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Signals $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Signals2 $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Start_Hook $(@)
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.State $(@)
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.Futures $(@)
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.LF_ThreadPool $(@)
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.TP_Reactor $(@)
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.Task_ThreadPool $(@)
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.ThreadPool $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Atomic_Op $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Barrier $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Mutex $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.RW_Lock $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Semaphore $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.TSS $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Tokens $(@)
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Tokens_Deadlock $(@)
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Activate $(@)
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Condition_Variables $(@)
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Guards $(@)
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Message_Blocks $(@)
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Message_Queue $(@)
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Mutexes $(@)
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Alarm $(@)
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Task $(@)
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Timers $(@)
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Upcall $(@)

.PHONY: AO
AO:
	$(KEEP_GOING)@cd Active_Objects && $(MAKE) -f GNUmakefile.AO all

.PHONY: AO-depend
AO-depend:
	$(KEEP_GOING)@cd Active_Objects && $(MAKE) -f GNUmakefile.AO depend

.PHONY: AO2
AO2:
	$(KEEP_GOING)@cd Active_Objects && $(MAKE) -f GNUmakefile.AO2 all

.PHONY: AO2-depend
AO2-depend:
	$(KEEP_GOING)@cd Active_Objects && $(MAKE) -f GNUmakefile.AO2 depend

.PHONY: ARGV_Example
ARGV_Example:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.ARGV_Example all

.PHONY: ARGV_Example-depend
ARGV_Example-depend:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.ARGV_Example depend

.PHONY: Config_HA_Status
Config_HA_Status:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Config_HA_Status all

.PHONY: Config_HA_Status-depend
Config_HA_Status-depend:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Config_HA_Status depend

.PHONY: Get_Opt
Get_Opt:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Get_Opt all

.PHONY: Get_Opt-depend
Get_Opt-depend:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Get_Opt depend

.PHONY: Get_Opt_Long
Get_Opt_Long:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Get_Opt_Long all

.PHONY: Get_Opt_Long-depend
Get_Opt_Long-depend:
	$(KEEP_GOING)@cd Config && $(MAKE) -f GNUmakefile.Get_Opt_Long depend

.PHONY: Allocator
Allocator:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Allocator all

.PHONY: Allocator-depend
Allocator-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Allocator depend

.PHONY: Array
Array:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Array all

.PHONY: Array-depend
Array-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Array depend

.PHONY: Containers_Hash_Map
Containers_Hash_Map:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Containers_Hash_Map all

.PHONY: Containers_Hash_Map-depend
Containers_Hash_Map-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Containers_Hash_Map depend

.PHONY: Containers_Map_Manager
Containers_Map_Manager:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Containers_Map_Manager all

.PHONY: Containers_Map_Manager-depend
Containers_Map_Manager-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Containers_Map_Manager depend

.PHONY: DLList
DLList:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.DLList all

.PHONY: DLList-depend
DLList-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.DLList depend

.PHONY: Hash_Map_Hash
Hash_Map_Hash:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Hash_Map_Hash all

.PHONY: Hash_Map_Hash-depend
Hash_Map_Hash-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Hash_Map_Hash depend

.PHONY: Map_Manager_Specialization
Map_Manager_Specialization:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Map_Manager_Specialization all

.PHONY: Map_Manager_Specialization-depend
Map_Manager_Specialization-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Map_Manager_Specialization depend

.PHONY: Queues
Queues:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Queues all

.PHONY: Queues-depend
Queues-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Queues depend

.PHONY: RB_Tree
RB_Tree:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.RB_Tree all

.PHONY: RB_Tree-depend
RB_Tree-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.RB_Tree depend

.PHONY: RB_Tree_Functors
RB_Tree_Functors:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.RB_Tree_Functors all

.PHONY: RB_Tree_Functors-depend
RB_Tree_Functors-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.RB_Tree_Functors depend

.PHONY: Sets
Sets:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Sets all

.PHONY: Sets-depend
Sets-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Sets depend

.PHONY: Stacks
Stacks:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Stacks all

.PHONY: Stacks-depend
Stacks-depend:
	$(KEEP_GOING)@cd Containers && $(MAKE) -f GNUmakefile.Stacks depend

.PHONY: Change_Instance_Default
Change_Instance_Default:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Change_Instance_Default all

.PHONY: Change_Instance_Default-depend
Change_Instance_Default-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Change_Instance_Default depend

.PHONY: Change_Mask
Change_Mask:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Change_Mask all

.PHONY: Change_Mask-depend
Change_Mask-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Change_Mask depend

.PHONY: Howto_Syslog
Howto_Syslog:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Howto_Syslog all

.PHONY: Howto_Syslog-depend
Howto_Syslog-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Howto_Syslog depend

.PHONY: Simple1
Simple1:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Simple1 all

.PHONY: Simple1-depend
Simple1-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Simple1 depend

.PHONY: Simple2
Simple2:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Simple2 all

.PHONY: Simple2-depend
Simple2-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Simple2 depend

.PHONY: Trace_Return
Trace_Return:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Trace_Return all

.PHONY: Trace_Return-depend
Trace_Return-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Trace_Return depend

.PHONY: Use_Callback
Use_Callback:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Callback all

.PHONY: Use_Callback-depend
Use_Callback-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Callback depend

.PHONY: Use_Callback2
Use_Callback2:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Callback2 all

.PHONY: Use_Callback2-depend
Use_Callback2-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Callback2 depend

.PHONY: Use_LogManager
Use_LogManager:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_LogManager all

.PHONY: Use_LogManager-depend
Use_LogManager-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_LogManager depend

.PHONY: Use_Logger
Use_Logger:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logger all

.PHONY: Use_Logger-depend
Use_Logger-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logger depend

.PHONY: Use_Logging_Server
Use_Logging_Server:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logging_Server all

.PHONY: Use_Logging_Server-depend
Use_Logging_Server-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logging_Server depend

.PHONY: Use_Logging_Strategy
Use_Logging_Strategy:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logging_Strategy all

.PHONY: Use_Logging_Strategy-depend
Use_Logging_Strategy-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Logging_Strategy depend

.PHONY: Use_Multiple_Sinks
Use_Multiple_Sinks:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Multiple_Sinks all

.PHONY: Use_Multiple_Sinks-depend
Use_Multiple_Sinks-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Multiple_Sinks depend

.PHONY: Use_Ostream
Use_Ostream:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Ostream all

.PHONY: Use_Ostream-depend
Use_Ostream-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Ostream depend

.PHONY: Use_Stderr
Use_Stderr:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Stderr all

.PHONY: Use_Stderr-depend
Use_Stderr-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Stderr depend

.PHONY: Use_Syslog
Use_Syslog:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Syslog all

.PHONY: Use_Syslog-depend
Use_Syslog-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Use_Syslog depend

.PHONY: Wrap_Macros
Wrap_Macros:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Wrap_Macros all

.PHONY: Wrap_Macros-depend
Wrap_Macros-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Wrap_Macros depend

.PHONY: Wrap_Macros_Alt
Wrap_Macros_Alt:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Wrap_Macros_Alt all

.PHONY: Wrap_Macros_Alt-depend
Wrap_Macros_Alt-depend:
	$(KEEP_GOING)@cd Logging && $(MAKE) -f GNUmakefile.Wrap_Macros_Alt depend

.PHONY: UDP_Broadcast
UDP_Broadcast:
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Broadcast all

.PHONY: UDP_Broadcast-depend
UDP_Broadcast-depend:
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Broadcast depend

.PHONY: UDP_Multicast
UDP_Multicast:
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Multicast all

.PHONY: UDP_Multicast-depend
UDP_Multicast-depend:
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Multicast depend

.PHONY: UDP_Unicast
UDP_Unicast:
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Unicast all

.PHONY: UDP_Unicast-depend
UDP_Unicast-depend:
	$(KEEP_GOING)@cd Misc_IPC && $(MAKE) -f GNUmakefile.UDP_Unicast depend

.PHONY: Nodelocal_Shared
Nodelocal_Shared:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal_Shared all

.PHONY: Nodelocal_Shared-depend
Nodelocal_Shared-depend:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal_Shared depend

.PHONY: Netlocal
Netlocal: Nodelocal_Shared
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Netlocal all

.PHONY: Netlocal-depend
Netlocal-depend:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Netlocal depend

.PHONY: Netlocal_Reader
Netlocal_Reader:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Netlocal_Reader all

.PHONY: Netlocal_Reader-depend
Netlocal_Reader-depend:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Netlocal_Reader depend

.PHONY: Nodelocal
Nodelocal:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal all

.PHONY: Nodelocal-depend
Nodelocal-depend:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal depend

.PHONY: Nodelocal_Shared_Reader
Nodelocal_Shared_Reader: Netlocal_Reader Nodelocal
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal_Shared_Reader all

.PHONY: Nodelocal_Shared_Reader-depend
Nodelocal_Shared_Reader-depend:
	$(KEEP_GOING)@cd Naming && $(MAKE) -f GNUmakefile.Nodelocal_Shared_Reader depend

.PHONY: HA_Proactive_Status
HA_Proactive_Status:
	$(KEEP_GOING)@cd Proactor && $(MAKE) -f GNUmakefile.HA_Proactive_Status all

.PHONY: HA_Proactive_Status-depend
HA_Proactive_Status-depend:
	$(KEEP_GOING)@cd Proactor && $(MAKE) -f GNUmakefile.HA_Proactive_Status depend

.PHONY: Process_Manager_Death
Process_Manager_Death:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Manager_Death all

.PHONY: Process_Manager_Death-depend
Process_Manager_Death-depend:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Manager_Death depend

.PHONY: Process_Manager_Spawn
Process_Manager_Spawn:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Manager_Spawn all

.PHONY: Process_Manager_Spawn-depend
Process_Manager_Spawn-depend:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Manager_Spawn depend

.PHONY: Process_Mutex
Process_Mutex:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Mutex all

.PHONY: Process_Mutex-depend
Process_Mutex-depend:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Process_Mutex depend

.PHONY: Spawn
Spawn:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Spawn all

.PHONY: Spawn-depend
Spawn-depend:
	$(KEEP_GOING)@cd Processes && $(MAKE) -f GNUmakefile.Spawn depend

.PHONY: Client
Client:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Client all

.PHONY: Client-depend
Client-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Client depend

.PHONY: HAStatus
HAStatus:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.HAStatus all

.PHONY: HAStatus-depend
HAStatus-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.HAStatus depend

.PHONY: HAStatus_AC
HAStatus_AC:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.HAStatus_AC all

.PHONY: HAStatus_AC-depend
HAStatus_AC-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.HAStatus_AC depend

.PHONY: Reactor_Timers
Reactor_Timers:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Reactor_Timers all

.PHONY: Reactor_Timers-depend
Reactor_Timers-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Reactor_Timers depend

.PHONY: Reschedule
Reschedule:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Reschedule all

.PHONY: Reschedule-depend
Reschedule-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Reschedule depend

.PHONY: Schedule_Timers
Schedule_Timers:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Schedule_Timers all

.PHONY: Schedule_Timers-depend
Schedule_Timers-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Schedule_Timers depend

.PHONY: Timer_Cancel
Timer_Cancel:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Timer_Cancel all

.PHONY: Timer_Cancel-depend
Timer_Cancel-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Timer_Cancel depend

.PHONY: Timer_State_Data
Timer_State_Data:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Timer_State_Data all

.PHONY: Timer_State_Data-depend
Timer_State_Data-depend:
	$(KEEP_GOING)@cd Reactor && $(MAKE) -f GNUmakefile.Timer_State_Data depend

.PHONY: Malloc
Malloc:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Malloc all

.PHONY: Malloc-depend
Malloc-depend:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Malloc depend

.PHONY: Mem_Map
Mem_Map:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Mem_Map all

.PHONY: Mem_Map-depend
Mem_Map-depend:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Mem_Map depend

.PHONY: PI_Malloc
PI_Malloc:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.PI_Malloc all

.PHONY: PI_Malloc-depend
PI_Malloc-depend:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.PI_Malloc depend

.PHONY: Pool_Growth
Pool_Growth:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Pool_Growth all

.PHONY: Pool_Growth-depend
Pool_Growth-depend:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Pool_Growth depend

.PHONY: Shared_Memory_Hash_Map
Shared_Memory_Hash_Map:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Shared_Memory_Hash_Map all

.PHONY: Shared_Memory_Hash_Map-depend
Shared_Memory_Hash_Map-depend:
	$(KEEP_GOING)@cd Shared_Memory && $(MAKE) -f GNUmakefile.Shared_Memory_Hash_Map depend

.PHONY: SigAction
SigAction:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigAction all

.PHONY: SigAction-depend
SigAction-depend:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigAction depend

.PHONY: SigGuard
SigGuard:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigGuard all

.PHONY: SigGuard-depend
SigGuard-depend:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigGuard depend

.PHONY: SigHandler
SigHandler:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigHandler all

.PHONY: SigHandler-depend
SigHandler-depend:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigHandler depend

.PHONY: SigHandlers
SigHandlers:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigHandlers all

.PHONY: SigHandlers-depend
SigHandlers-depend:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigHandlers depend

.PHONY: SigInfo
SigInfo:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigInfo all

.PHONY: SigInfo-depend
SigInfo-depend:
	$(KEEP_GOING)@cd Signals && $(MAKE) -f GNUmakefile.SigInfo depend

.PHONY: Sockets_Basic
Sockets_Basic:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Basic all

.PHONY: Sockets_Basic-depend
Sockets_Basic-depend:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Basic depend

.PHONY: Sockets_Basic_Robust
Sockets_Basic_Robust:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Basic_Robust all

.PHONY: Sockets_Basic_Robust-depend
Sockets_Basic_Robust-depend:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Basic_Robust depend

.PHONY: Sockets_Iovec
Sockets_Iovec:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Iovec all

.PHONY: Sockets_Iovec-depend
Sockets_Iovec-depend:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Iovec depend

.PHONY: Sockets_Server
Sockets_Server:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Server all

.PHONY: Sockets_Server-depend
Sockets_Server-depend:
	$(KEEP_GOING)@cd Sockets && $(MAKE) -f GNUmakefile.Sockets_Server depend

.PHONY: Answerer
Answerer:
	$(KEEP_GOING)@cd Streams && $(MAKE) -f GNUmakefile.Answerer all

.PHONY: Answerer-depend
Answerer-depend:
	$(KEEP_GOING)@cd Streams && $(MAKE) -f GNUmakefile.Answerer depend

.PHONY: HA_Configurable_Server_Dynamic
HA_Configurable_Server_Dynamic:
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.HA_Configurable_Server_Dynamic all

.PHONY: HA_Configurable_Server_Dynamic-depend
HA_Configurable_Server_Dynamic-depend:
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.HA_Configurable_Server_Dynamic depend

.PHONY: HA_Configurable_Server_Static
HA_Configurable_Server_Static:
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.HA_Configurable_Server_Static all

.PHONY: HA_Configurable_Server_Static-depend
HA_Configurable_Server_Static-depend:
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.HA_Configurable_Server_Static depend

.PHONY: Svc_Config_HA_Status
Svc_Config_HA_Status:
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.Svc_Config_HA_Status all

.PHONY: Svc_Config_HA_Status-depend
Svc_Config_HA_Status-depend:
	$(KEEP_GOING)@cd Svc_Config && $(MAKE) -f GNUmakefile.Svc_Config_HA_Status depend

.PHONY: Async_Cancel
Async_Cancel:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Async_Cancel all

.PHONY: Async_Cancel-depend
Async_Cancel-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Async_Cancel depend

.PHONY: Coop_Cancel
Coop_Cancel:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Coop_Cancel all

.PHONY: Coop_Cancel-depend
Coop_Cancel-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Coop_Cancel depend

.PHONY: ExitHandler
ExitHandler:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.ExitHandler all

.PHONY: ExitHandler-depend
ExitHandler-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.ExitHandler depend

.PHONY: Pool
Pool:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Pool all

.PHONY: Pool-depend
Pool-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Pool depend

.PHONY: Priorities
Priorities:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Priorities all

.PHONY: Priorities-depend
Priorities-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Priorities depend

.PHONY: Signals
Signals:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Signals all

.PHONY: Signals-depend
Signals-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Signals depend

.PHONY: Signals2
Signals2:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Signals2 all

.PHONY: Signals2-depend
Signals2-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Signals2 depend

.PHONY: Start_Hook
Start_Hook:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Start_Hook all

.PHONY: Start_Hook-depend
Start_Hook-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.Start_Hook depend

.PHONY: State
State:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.State all

.PHONY: State-depend
State-depend:
	$(KEEP_GOING)@cd ThreadManagement && $(MAKE) -f GNUmakefile.State depend

.PHONY: Futures
Futures:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.Futures all

.PHONY: Futures-depend
Futures-depend:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.Futures depend

.PHONY: LF_ThreadPool
LF_ThreadPool:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.LF_ThreadPool all

.PHONY: LF_ThreadPool-depend
LF_ThreadPool-depend:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.LF_ThreadPool depend

.PHONY: TP_Reactor
TP_Reactor:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.TP_Reactor all

.PHONY: TP_Reactor-depend
TP_Reactor-depend:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.TP_Reactor depend

.PHONY: Task_ThreadPool
Task_ThreadPool:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.Task_ThreadPool all

.PHONY: Task_ThreadPool-depend
Task_ThreadPool-depend:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.Task_ThreadPool depend

.PHONY: ThreadPool
ThreadPool:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.ThreadPool all

.PHONY: ThreadPool-depend
ThreadPool-depend:
	$(KEEP_GOING)@cd ThreadPools && $(MAKE) -f GNUmakefile.ThreadPool depend

.PHONY: Atomic_Op
Atomic_Op:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Atomic_Op all

.PHONY: Atomic_Op-depend
Atomic_Op-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Atomic_Op depend

.PHONY: Barrier
Barrier:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Barrier all

.PHONY: Barrier-depend
Barrier-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Barrier depend

.PHONY: Mutex
Mutex:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Mutex all

.PHONY: Mutex-depend
Mutex-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Mutex depend

.PHONY: RW_Lock
RW_Lock:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.RW_Lock all

.PHONY: RW_Lock-depend
RW_Lock-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.RW_Lock depend

.PHONY: Semaphore
Semaphore:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Semaphore all

.PHONY: Semaphore-depend
Semaphore-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Semaphore depend

.PHONY: TSS
TSS:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.TSS all

.PHONY: TSS-depend
TSS-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.TSS depend

.PHONY: Tokens
Tokens:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Tokens all

.PHONY: Tokens-depend
Tokens-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Tokens depend

.PHONY: Tokens_Deadlock
Tokens_Deadlock:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Tokens_Deadlock all

.PHONY: Tokens_Deadlock-depend
Tokens_Deadlock-depend:
	$(KEEP_GOING)@cd ThreadSafety && $(MAKE) -f GNUmakefile.Tokens_Deadlock depend

.PHONY: Activate
Activate:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Activate all

.PHONY: Activate-depend
Activate-depend:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Activate depend

.PHONY: Condition_Variables
Condition_Variables:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Condition_Variables all

.PHONY: Condition_Variables-depend
Condition_Variables-depend:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Condition_Variables depend

.PHONY: Guards
Guards:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Guards all

.PHONY: Guards-depend
Guards-depend:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Guards depend

.PHONY: Message_Blocks
Message_Blocks:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Message_Blocks all

.PHONY: Message_Blocks-depend
Message_Blocks-depend:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Message_Blocks depend

.PHONY: Message_Queue
Message_Queue:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Message_Queue all

.PHONY: Message_Queue-depend
Message_Queue-depend:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Message_Queue depend

.PHONY: Mutexes
Mutexes:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Mutexes all

.PHONY: Mutexes-depend
Mutexes-depend:
	$(KEEP_GOING)@cd Threads && $(MAKE) -f GNUmakefile.Mutexes depend

.PHONY: Alarm
Alarm:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Alarm all

.PHONY: Alarm-depend
Alarm-depend:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Alarm depend

.PHONY: Task
Task:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Task all

.PHONY: Task-depend
Task-depend:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Task depend

.PHONY: Timers-target
Timers-target:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Timers all

.PHONY: Timers-target-depend
Timers-target-depend:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Timers depend

.PHONY: Upcall
Upcall:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Upcall all

.PHONY: Upcall-depend
Upcall-depend:
	$(KEEP_GOING)@cd Timers && $(MAKE) -f GNUmakefile.Upcall depend

project_name_list:
	@echo AO
	@echo AO2
	@echo ARGV_Example
	@echo Config_HA_Status
	@echo Get_Opt
	@echo Get_Opt_Long
	@echo Allocator
	@echo Array
	@echo Containers_Hash_Map
	@echo Containers_Map_Manager
	@echo DLList
	@echo Hash_Map_Hash
	@echo Map_Manager_Specialization
	@echo Queues
	@echo RB_Tree
	@echo RB_Tree_Functors
	@echo Sets
	@echo Stacks
	@echo Change_Instance_Default
	@echo Change_Mask
	@echo Howto_Syslog
	@echo Simple1
	@echo Simple2
	@echo Trace_Return
	@echo Use_Callback
	@echo Use_Callback2
	@echo Use_LogManager
	@echo Use_Logger
	@echo Use_Logging_Server
	@echo Use_Logging_Strategy
	@echo Use_Multiple_Sinks
	@echo Use_Ostream
	@echo Use_Stderr
	@echo Use_Syslog
	@echo Wrap_Macros
	@echo Wrap_Macros_Alt
	@echo UDP_Broadcast
	@echo UDP_Multicast
	@echo UDP_Unicast
	@echo Netlocal
	@echo Netlocal_Reader
	@echo Nodelocal
	@echo Nodelocal_Shared
	@echo Nodelocal_Shared_Reader
	@echo HA_Proactive_Status
	@echo Process_Manager_Death
	@echo Process_Manager_Spawn
	@echo Process_Mutex
	@echo Spawn
	@echo Client
	@echo HAStatus
	@echo HAStatus_AC
	@echo Reactor_Timers
	@echo Reschedule
	@echo Schedule_Timers
	@echo Timer_Cancel
	@echo Timer_State_Data
	@echo Malloc
	@echo Mem_Map
	@echo PI_Malloc
	@echo Pool_Growth
	@echo Shared_Memory_Hash_Map
	@echo SigAction
	@echo SigGuard
	@echo SigHandler
	@echo SigHandlers
	@echo SigInfo
	@echo Sockets_Basic
	@echo Sockets_Basic_Robust
	@echo Sockets_Iovec
	@echo Sockets_Server
	@echo Answerer
	@echo HA_Configurable_Server_Dynamic
	@echo HA_Configurable_Server_Static
	@echo Svc_Config_HA_Status
	@echo Async_Cancel
	@echo Coop_Cancel
	@echo ExitHandler
	@echo Pool
	@echo Priorities
	@echo Signals
	@echo Signals2
	@echo Start_Hook
	@echo State
	@echo Futures
	@echo LF_ThreadPool
	@echo TP_Reactor
	@echo Task_ThreadPool
	@echo ThreadPool
	@echo Atomic_Op
	@echo Barrier
	@echo Mutex
	@echo RW_Lock
	@echo Semaphore
	@echo TSS
	@echo Tokens
	@echo Tokens_Deadlock
	@echo Activate
	@echo Condition_Variables
	@echo Guards
	@echo Message_Blocks
	@echo Message_Queue
	@echo Mutexes
	@echo Alarm
	@echo Task
	@echo Timers-target
	@echo Upcall
